I type
II subject
III enveroment
IV  items
V teacherp
VI teachern
VII teacher

INSERT INTO type (id, name_) VALUES
(1,'Lesson'),
(2,'Seminar');

SHOW COLUMNS FROM subject;

+----------+-------------+------+-----+---------+----------------+
| Field    | Type        | Null | Key | Default | Extra          |
+----------+-------------+------+-----+---------+----------------+
| id       | int         | NO   | PRI | NULL    | auto_increment |
| name_v   | varchar(10) | NO   |     | NULL    |                |
| platform | varchar(20) | NO   |     | NULL    |                |
| type_id  | int         | NO   | MUL | NULL    |                |
| number   | int         | NO   |     | NULL    |                |
+----------+-------------+------+-----+---------+----------------+

ALTER TABLE subject MODIFY COLUMN name_v VARCHAR(20) NOT NULL;

INSERT INTO subject (name_v, platform, type_id, number) VALUES
('MYSQL_L1.mp4', 'GB', 1, 1);

+----+--------------+----------+---------+--------+
| id | name_v       | platform | type_id | number |
+----+--------------+----------+---------+--------+
|  1 | MYSQL_L1.mp4 | GB       |       1 |      1 |
+----+--------------+----------+---------+--------+

ALTER TABLE subject ALTER COLUMN platform SET DEFAULT "GB";



ALTER TABLE subject MODIFY COLUMN name_v VARCHAR(20) NOT NULL;


CREATE TABLE topic (
id INT NOT NULL AUTO_INCREMENT,
PRIMARY KEY(id),
name TINYTEXT NOT NULL
)ENGINE=INNODB;

ALTER TABLE items RENAME COLUMN topic TO topic_id; /изменили имя столбца

ALTER TABLE items
ADD CONSTRAINT items_topicfk FOREIGN KEY (`topic_id`) REFERENCES topic(`id`); /добавили связь между таблицами

RENAME TABLE teachern TO teacherf; /переименование таблицы

ALTER TABLE teacher RENAME COLUMN name_id TO fname_id; /переименование столбца

SELECT t.*, f.* FROM teacher t RIGHT JOIN teacherf f ON f.id = t.fname_id; /RIGHT JOIN с выводом всех столбцов обеих таблиц

INSERT INTO topic (id) VALUES (null); /внесение в таблицу установленных по умолчанию данных одновременно во все поля (проверено, что работает только при установлении primary key значения auto incriment);

ALTER TABLE teacher MODIFY COLUMN id INT NOT NULL AUTO_INCREMENT; /установка свойства AUTO_INCREMENT


SELECT ProductName, ProductCount,                   /ПРИМЕР ИСПОЛЬЗОВАНИЕ CASE
    -> CASE
    -> WHEN ProductCount = 1
    -> THEN 'Товар заканчивается'
    -> WHEN ProductCount = 2
    -> THEN 'Мало товара'
    -> WHEN ProductCount = 3
    -> THEN 'Есть в наличии'
    -> ELSE 'Много товара'
    -> END AS Category
    -> FROM Products;
+-------------+--------------+---------------------+
| ProductName | ProductCount | Category            |
+-------------+--------------+---------------------+
| iPhoneX     |            3 | Есть в наличии      |
| iPhone8     |            2 | Мало товара         |
| Galaxv S9   |            2 | Мало товара         |
| GalaxvS8    |            1 | Товар заканчивается |
| P20Pro      |            5 | Много товара        |
+-------------+--------------+---------------------+
5 rows in set (0.00 sec)


 SELECT ProductName, Manufacturer,							/ПРИМЕР ИСПОЛЬЗОВАНИЯ IF
    -> If(ProductCount > 3, 'Много товара', 'Мало товара')
    -> FROM Products;
+-------------+--------------+-----------------------------------------------------+
| ProductName | Manufacturer | If(ProductCount > 3, 'Много товара', 'Мало товара') |
+-------------+--------------+-----------------------------------------------------+
| iPhoneX     | Aool         | Мало товара                                         |
| iPhone8     | Aoole        | Мало товара                                         |
| Galaxv S9   | Samsuno      | Мало товара                                         |
| GalaxvS8    | Samsuno      | Мало товара                                         |
| P20Pro      | Huawei       | Много товара                                        |
+-------------+--------------+-----------------------------------------------------+
5 rows in set (0.00 sec)

UPDATE Products										/ПРИМЕР ИСЕОЛЬЗОВАНИЯ UPDATE (УВЕЛИЧИЛИ ЗНАЧЕНИЕ ПОЛЯ Price на 3000)
    -> SET Price = Price + 3000;
Query OK, 5 rows affected (0.00 sec)
Rows matched: 5  Changed: 5  Warnings: 0

mysql> SELECT * FROM Products;
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  1 | iPhoneX     | Aool         |            3 | 79000 |
|  2 | iPhone8     | Aoole        |            2 | 54000 |
|  3 | Galaxv S9   | Samsuno      |            2 | 59000 |
|  4 | GalaxvS8    | Samsuno      |            1 | 44000 |
|  5 | P20Pro      | Huawei       |            5 | 39000 |
+----+-------------+--------------+--------------+-------+
5 rows in set (0.00 sec)

													/ПРИМЕР УДАЛЕНИЯ ЗАПИСЕЙ ИМЕЮЩИХ ЗНАЧЕНИЕ 'Aool' в поле Manufacturer
 DELETE FROM products
    -> WHERE Manufacturer = 'Aool';
Query OK, 1 row affected (0.00 sec)

mysql> SELECT * FROM Products;
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  2 | iPhone8     | Aoole        |            2 | 54000 |
|  3 | Galaxv S9   | Samsuno      |            2 | 59000 |
|  4 | GalaxvS8    | Samsuno      |            1 | 44000 |
|  5 | P20Pro      | Huawei       |            5 | 39000 |
+----+-------------+--------------+--------------+-------+
4 rows in set (0.00 sec)