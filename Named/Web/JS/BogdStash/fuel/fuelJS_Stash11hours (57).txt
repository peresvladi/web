"00;71;ЗНАКОМСТВО, ВСТУПЛЕНИЕ.;0;0;0;0,JS_Stash11hours,71;125;КРАТКИЙ ОБЗОР КУРСОВ НА STASHCHUK.COM;0;0;0;0,JS_Stash11hours,126;344;ДЛЯ КОГО КУРС, РЕКОМЕНДАЦИИ ПО ЕГО ПРОХОЖДЕНИЮ;0;0;0;0,JS_Stash11hours,  344;396;ЧТО КУРС ПОЗВОЛЯЕТ ИЗУЧАТЬ ДАЛЕЕ ПОСЛЕ ЕГО ПРОХОЖДЕНИЯ;0;0;0;0,JS_Stash11hours,396;457;ДОПОЛНИТЕЛЬНАЯ РЕКОМЕНДАЦИЯ ПО ИЗУЧЕНИЮ (ПРИНЦИП 80 НА 20);0;0;0;0,JS_Stash11hours,457;588;ПРИМЕРЫ ПРОГРАММ СРЕДА КОТОРЫХ ПОЗВОЛЯЕТ ВЫПОЛНЯТЬ КОД JS;0;0;0;0,JS_Stash11hours,588;610;УСТАНОВКА GOOGLE CHROME BROWSER;1;0;0;0,JS_Stash11hours,610;658;ОТКРЫТИЕ КОНСОЛИ В GOOGLE CHROME BROWSE;1;0;0;0,JS_Stash11hours,658;713;НАСТРОЙКА КОНСОЛИ И ЕЕ ШРИФТА;1;0;0;0,JS_Stash11hours,713;739;ПРИМЕР ВВОДА КОДА В КОНСОЛЬ;0;0;0;1,JS_Stash11hours,739;770;ПРИМЕР ОШИБКИ \"Uncaught ReferenceError: * is not defined at <anonumous>;1;0;0;1,JS_Stash11hours,770;794;ДАЛЬНЕЙШЕЕ ПОЯСНЕНИЕ ПО ТЕКУЩЕЙ ИНФОРМАЦИИ;0;0;0;0,JS_Stash11hours,794;798;ОЧИСТКА КОНСОЛИ;0;0;0;1,JS_Stash11hours,798;838;ОТКРЫТИЕ ОКНА СТРАНИЦЫ УСТАНОВКИ NODE.JS;1;0;0;0,JS_Stash11hours,    843;892;ПРОВЕРКА НАЛИЧИЯ УСТАНОВКИ NODE.JS,JS_Stash11hours,    892;923;ЗАПУСК ИНТЕРПРЕТАТОРА NODE.JS;1;0;0;0,JS_Stash11hours,  923;960;ПРИМЕРЫ ВВОДА КОДА В КОНСОЛЬ NODE.JS, ВЫЗОВА ОШИБКИ IS NOT DEFINED:Н;0;0;0;1,JS_Stash11hours,  960;971;ВЫХОД ИЗ ИНТЕРПРИТАТОРА NODE.JS;0;0;0;1,JS_Stash11hours,  972;1001;УСТАНОВКА VSCODE;1;0;0;0,JS_Stash11hours,1001;1049;УСТАНОВЛКА CODE RUNNER (РАСШИРЕНИЯ ДЛЯ VSCODE);1;0;0;0,JS_Stash11hours,  1049;1165;СОЗДАНИЕ ФАЙЛА JS В VSCODE, ВВЕДЕНИЕ КОДА И ИНИЦИАЛИЗАЦИЯ ОШИБКИ \"* is non defined\";0;0;0;1,JS_Stash11hours,    1165;1193;ПОВТОРНОЕ УСПЕШНОЕ ВЫПОЛНЕНИЯ КОДА;0;0;0;0,JS_Stash11hours,1192;1216;КОММЕНТАРИЙ ПО РЕЗУЛЬТАТАМ УСТАНОВКИ ОКРУЖЕНИЯ ДЛЯ ИЗУЧЕНИЯ JS;0;0;0;0,JS_Stash11hours,      1216;1241;ТРИ КЛЮЧЕВЫХ ПОНЯТИЯ JS;0;0;0;1,JS_Stash11hours,    1241;1262;ЧЕМ ЯВЛЯЕТСЯ ЛЮБАЮ СУЩНОСТЬ В JS ?;0;0;0;1;,JS_Stash11hours,1262;1353;ОБЪЕКТ, ПРИМЕР ОБЪЕКТА, ПРИМЕР ВЛОЖЕННОГО ОБЪЕКТА;0;0;0;1,JS_Stash11hours,      1353;1408;ПРИМЕРЫ ОБЪЕКТОВ, КАКИЕ ИМЕЮТ ОТЛИЧИЯ ТАКИЕ ОБЪЕКТЫ КАК НАПРИМЕР ЧИCЛА, ЧТО ТАКОЕ ОБЪЕКТ ПО СУТИ;0;0;0;1,JS_Stash11hours,1407;1439;ЧТО В ВЫРАЖЕНИИ: console.log(\"Hello World'), ЯВЛЯЕТСЯ ОБЪЕКТОМ ?;1;0;0;0,JS_Stash11hours,    1439;1469;ЧТО ТАКОЕ МЕТОД. КАКАЯ ЧАСТЬ ВЫРАЖЕНИЯ: console.log(\"Hello World\") ЯВЛЯЕТСЯ МЕТОДОМ;0;0;0;1,JS_Stash11hours,  1469;1497;ЧТО ТАКОЕ ТОЧЕЧНАЯ ЗАПИСЬ? ЧТО ТАКАЯ ЗАПИСЬ ПРЕДОСТАВЛЯЕТ ? ЧТО ЭЛЕМЕНТ В ВИДЕ ТОЧКИ ВЫРАЖЕНИЯ: console.log(\"Hello World\") ?;0;0;0;1,JS_Stash11hours,  1497;1513;ЧЕМ ЯВЛЯЮТСЯ СКОБКИ В ВЫРАЖЕНИИ: console.log(\"Hello World\");0;0;0;1,JS_Stash11hours,1513;1535;ЧЕМ В ВЫРАЖЕНИИ: console.log(\"Hello World'), ЯВЛЯЮТСЯ СИМВОЛЫ РАСПОЛОЖЕННЫЕ В СКОБКАХ ?;1;0;0;0,JS_Stash11hours,        1535;1570;ПОРЯДОК РАБОТЫ ВЫРАЖЕНИЯ: console.log(\"Hello World\");0;0;0;0,JS_Stash11hours,  1570;1593;ЧТО ПОЗВОЛЯЕТ МЕТОД: dir;0;0;0;1,JS_Stash11hours,  1593;1633;ЧТО ПОЗВОЛЯЕТ МЕТОД: table;0;0;0;1,JS_Stash11hours,  1616;1738;ЧТО ВСЕГДА ВОЗВРАЩАЕТ ВЫРАЖЕНИЕ, А ТАКЖЕ ФУНКЦИЯ ?;0;0;0;0,JS_Stash11hours,1738;1752;ЧТО ОБОЗНАЧАЕТ В ИНТЕРПРЕТАТЕРЕ ПОСЛЕ ВЫПОЛНЕНИЯ ВЫРАЖЕНИЯ СТРЕЛКА С ЛЕВА НА ПРАВО И СТРЕЛКА В ПРОТИВОПОЛОЖНОМ НАПРАВЛЕНИИ ?;0;0;0;1,JS_Stash11hours,1752;1786;КОММЕНТАРИЙ ВЫПОЛНЕНИЯ ВЫРАЖЕНИЯ;0;0;0;0,JS_Stash11hours,1786;1832;ПРОДОЛЖЕНИЕ КОММЕНТАРИЯ;0;0;0;0,JS_Stash11hours,1832;1938;ОБЗОР ПРОЙДЕННОГО В 1-Й ЧАСТИ;1;0;0;0,JS_Stash11hours,  1938;1954;ЧТО ЯВЛЯЕТСЯ НАИБОЛЕЕ ВАЖНЫМ В ПОНИМАНИИ, ЧТО ТАКОЕ ВЫРАЖЕНИЕ ?;0;0;0;0,JS_Stash11hours,    1954;2196;ПРИМЕРЫ ВЫРАЖЕНИЙ;0;0;0;0,JS_Stash11hours,2197;2250;ПРОДОЛЖЕНИЕ ТЕМЫ;0;0;0;0,JS_Stash11hours,2250;2307;ВЫРАЖЕНИЕ ПРИСВАИВАНИЯ;1;0;0;0,JS_Stash11hours,  2307;2458;ВЫРАЖЕНИЕ С ПОБОЧНЫМИ ДЕЙСТВИЯМИ;0;0;0;1,JS_Stash11hours,  2458;2481;ПРОДОЛЖЕНИЕ ТЕМЫ;0;0;0;0,JS_Stash11hours,2481;2573;ЧТО ТАКОЕ ПЕРЕМЕННЫЕ И ЧТО ОНИ ПОЗВОЛЯЮТ ДЕЛАТЬ ?;0;0;0;1,JS_Stash11hours,2573;2636;ПРОДОЛЖЕНИЕ ТЕМЫ;0;0;0;0,JS_Stash11hours,  2636;2738;ИМЕНА ПЕРЕМЕННЫХ (ДЛЯ ЧЕГО ИСПОЛЬЗУЕТСЯ ПАСКАЛЬКЕЙС);0;0;0;1,JS_Stash11hours,  2738;2819;ИМЕНА КОНСТАНТ;0;0;0;1,JS_Stash11hours,  2819;2923;КЭМЭЛ КЕЙС;0;0;0;1,JS_Stash11hours,2923;2982;РЕКОМЕНДАЦИИ ПО ИМЕНАМ ПЕРЕМЕННЫХ;0;0;0;1,JS_Stash11hours,2982;3243;ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ И КОНСТАНТ (Ч.1);0;0;0;1,JS_Stash11hours,3243;3305;КОГДА ПЕРЕМЕННАЯ ИМЕЕТ ЗНАЧЕНИЕ UNDEFINED (НЕОПРЕДЕЛЕННЫЙ);0;0;0;1,JS_Stash11hours,3305;3337;ОСОБЕННОСТИ ОБЪЯВЛЕНИЯ КОНСТАНТ;0;0;0;1,JS_Stash11hours,3337;3371;В КАКИХ СЛУЧАЯХ ВЫВОДИТСЯ СООБЩЕНИЕ ОБ ОШИБКЕ: TypeError: Assignment to conctant variable.;0;0;0;1,JS_Stash11hours,    3371;3407;РЕКОМЕНДАЦИЯ ПО ВЫБОРУ ИСПОЛЬЗОВАНИЯ ПЕРЕМЕННОЙ ИЛИ КОНСТАНТЫ;0;0;0;1,JS_Stash11hours,  3407;3457;В КАКОМ СЛУЧАЕ ВОЗНИКАЕТ СООБЩЕНИЕ ОБ ОШИБКЕ: ReferenceError: a is not defined;0;0;0;0,JS_Stash11hours,3457;3473;ОБЪЯВЛЕНИЕ ПЕРЕМЕННОЙ С ПОМОЩЬЮ КЛЮЧЕВОГО СЛОВА let;0;0;0;1,JS_Stash11hours,  3473;3507;В КАКОМ СЛУЧАЕ ВОЗНИКАЕТ СООБЩЕНИЕ ОБ ОШИБКЕ: undefined;0;0;0;1,JS_Stash11hours,3507;3539;ПРИМЕР ПРИCВАИВАЕНИЯ ЗНАЧЕНИЯ РАННЕЕ ОБЪЯВЛЕННОЕ ПЕРЕМЕННОЙ И ДАЛЬНЕЙШЕГО ЕЕ ИСПОЛЬЗОВАНИЯ;0;0;0;1,JS_Stash11hours,3539;3580;ОБЗОР (РЕЗЮМИРОВАНИЕ) РАССМАТРЕННЫХ ВОПРОСОВ ТЕМЫ: ОБЪЯВЛЕНИЯ ПЕРЕМЕННЫХ;0;0;0;1,JS_Stash11hours,3580;3748;ПРАКТИЧЕСКИЙ ПРИМЕР ОБЪЯВЛЕНИЯ И ИСПОЛЬЗОВАНИЯ ПЕРЕМЕННОЙ;0;0;0;0,JS_Stash11hours,  3748;3850;В КАКОЙ СРЕДЕ ФУНКЦИЯ  consode,log() НЕ ОТОБРАЖАЕТ РЕЗУЛЬТАТ СВОЕЙ РАБОТЫ И КАК ЕГО МОЖНО ОТОБРАЗИТЬ ЕГО В ЭТОЙ СРЕДЕ,JS_Stash11hours,  3850;3887;В КАКОМ СЛУЧАЕ ВОЗНИКАЕТ ОШИБКА: SyntaxError: Missing initialiser in const declaration;0;0;0;1,JS_Stash11hours,3887;3922;ПРАКТИЧЕСКИЙ ПРИМЕР ОБЪЯВЛЕНИЯ КОНСТАНТЫ И ЕЕ ИСПОЛЬЗОВАНИЯ;0;0;0;1,JS_Stash11hours,3922;3950;В КАКОЙ СЛУЧАЕ ВОЗНИКАЕТ ОШИБКА: TypeError: Assignment to constant variale;1;0;0;1,JS_Stash11hours,3950;3967;ПРЕРЫВАЕТСЯ ЛИ КОД ПОСЛЕ ОШИБКИ: Assignment to constant varable;0;0;0;1,JS_Stash11hours,3967;3986;В КАКИХ СЛУЧАЯХ РЕКОМЕНДУЕТСЯ ПРИМЕНЯТЬ КОНСТАНТЫ;0;0;0;1,JS_Stash11hours,  3986;3999;ЧЕМ ОПРЕДЕЛЯЕТСЯ ТИП ПЕРЕМЕННОЙ В JS;0;0;0;1,JS_Stash11hours,3999;4047;ПРАКТИЧЕСКИЙ ПРИМЕР ПРИСВАИВАНИЯ ТИПА ДАННЫХ: Numder, String;0;0;0;0,JS_Stash11hours,4047;4081;РЕКОМЕНДАЦИЯ ИСПОЛЬЗОВАНИЯ КАВЫЧЕК В JS;0;0;0;0,JS_Stash11hours,  4081;4118;СКОЛЬКО ПРИМИТИВНЫХ ТИПОВ В JS;0;0;0;0,JS_Stash11hours,4118;4143;СКОЛЬКО ПРИМИТИВНЫХ ТИПОВ ИМЕЕТСЯ В JS;0;0;0;1,JS_Stash11hours,4143;4146;ЧТО ЯВЛЯЕТСЯ ТИП ДАННЫХ string;0;0;0;1,JS_Stash11hours,4146;4156;ЧТО ОЗНАЧАЕТ ТИП ДАННЫХ boolean. СКОЛЬКО У НЕГО И КАКИЕ МОГУТ БЫТЬ ЗНАЧЕНИЯ.;0;0;0;1,JS_Stash11hours,4156;4169;ЧТО ЯВЛЯЕТСЯ ТИП ДАННЫХ number;0;0;0;1,JS_Stash11hours,4169;4198;ЧЕМ ЯВЛЯЕТСЯ КАКОЕ ЗНАЧЕНИЕ ИМЕЕТ И ДЛЯ ЧЕГО НУЖЕТ ТИП null;0;0;0;1,JS_Stash11hours,4198;4249;ЧЕМ ЯВЛЯЕТСЯ ТИП ДАННЫХ undefined В ЧЕМ ЕГО  ОТЛИЧИНЕ ОТ null;0;0;0;1,JS_Stash11hours,4249;4262;ДЛЯ ЧЕГО МОЖЕТ ИСПОЛЬЗОВАТЬСЯ ТИП ДАННЫХ symbol;0;0;0;1,JS_Stash11hours,4262;4276;основные типы данных;0;0;0;1,JS_Stash11hours,4276;4300;К КАКОМУ ТИПУ ДАННЫХ ОТНОСИТЬСЯ object (объект);0;0;0;1,JS_Stash11hours,  4300;4335;ПРИМЕРЫ ПРИМИТИВНЫХ ТИПОВ И ПОЧЕМУ ОНИ НАЗЫВАЮТСЯ ПРИМИТИВНЫМИ;0;0;0;1,JS_Stash11hours,  4335;4346;ПРИМЕРЫ ПРИМИТИВНЫХ ТИПОВ;0;0;0;0,JS_Stash11hours,4346;4365;ЧТО ТАКОЕ ОБЪЕКТ (ПОВТОРЕНИЕ);0;0;0;1,JS_Stash11hours,4365;4409;ПРИМЕР ОБЪЕКТА И ЧТО ХРАНИМ ПЕРЕМЕННАЯ ЕСЛИ ЕЙ ПРИСВОИТЬ ЗНАЧЕНИЕ ОБЪЕКТА;0;0;0;1,JS_Stash11hours,4409;4481;ПРИМЕР ОБЪЕКТА (МАССИВА) И ЧТО СОДЕРЖИТ ПЕРЕМЕННАЯ В СЛУЧАЕ ЕСЛИ ЕЙ ПРИСВАИВАЕТСЯ МАССИВ;0;0;0;1,JS_Stash11hours,    4481;4665;СКОЛЬКО ССЫЛОК МОЖЕТ ИМЕТЬ ОБЪЕКТ И К ЧЕМУ ЭТО ПРИВОДИТ;0;0;0;1,JS_Stash11hours,    4664;4693;ПРИМЕР СОЗДАНИЯ ОБЪЕКТНОЙ ПЕРЕМЕННОЙ;0;0;0;1,JS_Stash11hours,  4693;4723;ЧТО ЯВЛЯЕТСЯ ОБЪЕКТ, ЧЕМ ОПРЕДЕЛЯЕТСЯ, ЧТО СОДЕРЖИТ, ОБЯЗАТЕЛЬНО ЛИ СТАВИТЬ ЗАПЯТУЮ ПОСЛЕ ПОСЛЕДНЕГО СВОЙСТВА ОБЪЕКТА В ЗАПИСИ;0;0;0;1,JS_Stash11hours,  4770;4813;ПРИМЕР КОПИРОВАНИЯ ОБЪЕКТНОЙ ССЫЛКИ;0;0;0;1,JS_Stash11hours,4813;4845;Что будет находится в памяти компьютера в случае создания копии объектной ссылки ?;0;0;0;1,JS_Stash11hours,4845;4953;ПРАКТИЧЕСКИЙ ПРИМЕР ИЗМЕНЕНИЯ СВОЙСТВА ОБЪЕКТА?;0;0;0;1,JS_Stash11hours,4953;5022;РЕЗУЛЬТАТ ИЗМЕНЕНИЯ ССЫЛОЧНОГО ОБЪЕКТА ?;0;0;0;1,JS_Stash11hours,5022;5128;ПРИМЕР ПРИСВАИВАНИЯ НОВОГО СВОЙСТВА ОБЪЕКУ;0;0;0;1,JS_Stash11hours,5128;5143;ЗАДАНИЕ ПОВТОРИТЬ РАННЕЕ ОПИСАННОЕ В ЛЮБОЙ ПОДХОДЯЩЕЙ СРЕДЕ;0;0;0;0,JS_Stash11hours,5143;5229;ПРИМЕР ОЧИТСТКИ ПРЕДИДУЩЕЙ СЕССИИ В ИНСТУМЕНТАХ РАЗРАБОТЧИКА ГУГУЛ ХРОМ;0;0;0;1,JS_Stash11hours,5229;5255;ЗАДАНИЕ САМОПОДГОТОВКИ;0;0;0;0,JS_Stash11hours,5255;5299;РАЗБОР ИЗУЧЕННОГО МАТЕРИАЛА ТИПОВ ДАННЫХ;0;0;0;0,JS_Stash11hours,5299;5419;ПРИМЕР СТАТИЧЕСКОЙ ТИПИЗАЦИИ;0;0;0;1,JS_Stash11hours,  5419;5543;ДИНАМИЧЕСКАЯ ТИПИЗАЦИЯ, JS ЯЗЫК ДИНАМИЧЕСКОЙ ТИПИЗАЦИИ;0;0;0;1,JS_Stash11hours,5543;5664;ПРАКТИЧЕСКИЕ ПРИМЕРЫ ДИНАМИЧЕСКОЙ ТИПИЗАЦИИ JS;0;0;0;1,JS_Stash11hours,5664;5789;КАКАЯ ВОЗМОЖНА ОШИБКА (Uncaught TypeError: a is not a function) ПРИ ДИНАМИЧЕСКОЙ ТИПИЗАЦИИ И ЧТО ПОЗВОЛЯЕТ ЕЕ НЕДОПУСТИТЬ;0;0;0;1,JS_Stash11hours,5789;5918;ПРИМЕР  СО СТРЕЛОЧНОЙ ФУНКЦИЕЙ, КАК ИСПОЛЬЗОВАНИЕ КОНСТАНТЫ НЕ ПОЗВОЛЯЕТ ДОПУСТИТЬ ВОЗМОЖНУЮ ОШИБКУ ДИНАМИЧЕСКИЙ ТИПИЗИРОВАННОГО ЯЗЫКА ПРОГРАММИРОВАНИЯ;0;0;0;1,JS_Stash11hours,5918;5935;РЕЗЮМЕ ПО ТЕМЕ JS ЯЗЫК ДИНАМИЧЕСКОЙ ТИПИЗАЦИИ РЕКОМЕНДАЦИЯ ПО БОРЬБЕ С ВОЗМОЖНЫМИ ОШИБКАМИ;0;0;0;0,JS_Stash11hours,5935;5943;ДОПОЛНЕНИЕ К РЕЗЮМЕ;0;0;0;0,JS_Stash11hours,5943;5973;ПРАВИЛА РАБОТЫ С ПЕРЕМЕННЫМИ В JS;0;0;0;1,JS_Stash11hours,5973;6002;ЧЕМ ЯВЛЯЮТСЯ ПРАКТИЧЕСКИ ВСЕ СУЩНОСТЬ В JS;0;0;0;1,JS_Stash11hours,6002;6008;ЧЕМ ЯВЛЯЕТСЯ ОБЪЕКТ(ПОВТОР);0;0;0;1,JS_Stash11hours,6008;6012;КРОМЕ ТОБОГО ОБЪЕКТ ЭТО;0;0;0;0,JS_Stash11hours,  6012;6025;ОБЪЕКТ ПО ОТНОШЕНИЮ К ПЕРЕМЕННЫМ,JS_Stash11hours,6025;6041;КАКОЙ ТИП У ОБЪЕКТА И ЧТО СОДЕРЖИТ ПЕРЕМЕННАЯ КОТОРОЙ ПРИСВОЕН ОБЪЕКТ(ПОВТОР);0;0;0;0,JS_Stash11hours,  6041;6080;СТРУКТУРА ОБЪЕКТА,JS_Stash11hours,6080;6089;КАК РЕКОМЕНДУЕТСЯ ОБЪЯВЛЯТЬ ПЕРЕМЕННУЮ СОЗДАННУЮ ДЛЯ ПРИСВОЕНИЯ ЕЙ ССЫЛКИ НА ОБЪЕКТ;0;0;0;0,JS_Stash11hours,6089;6098;ИМЕЕТ ЛИ ЗНАЧЕНИЯ ДЛЯ ОБЪЕКТА ПОРЯДОК РАСПОЛОЖЕНИЯ ЕГО СВОЙСТВ;0;0;0;1,JS_Stash11hours,6098;6177;ПРИМЕР ТЕХНИЧЕСКИ РАВНЫХ ДВУХ ОБЪЕКТОВ ДЛЯ JS;0;0;0;0,JS_Stash11hours,6177;6254;ДОСТУП К СВОЙСТВАМ ОБЪЕКТА С ПОМОЩЬЮ ТОЧЕЧНОЙ ЗАПИСИ (Dot notation);0;0;0;1,JS_Stash11hours,6254;6307;ИЗМЕНЕНИЕ СВОЙСТВ ЗНАЧЕНИЙ ОБЪЕКТА;0;0;0;1,JS_Stash11hours,6307;6378;ДОБАВЛЕНИЕ СВОЙСТВ ОБЪЕКТУ;0;0;0;1,JS_Stash11hours,6378;6500;ПОЧЕМУ ВОЗМОЖНО МЕНЯТЬ СВОЙСТВА ОБЪЕКТА (МУТРОВАТЬ ОБЪЕКТ) НЕ СМОТРЯ НА ТО, ЧТО ОН БЫЛ ПРИСВОЕН ПЕРЕМЕННОЙ ОБЪЯВЛЕННОЙ КАК КОНСТАНТА;0;0;0;1,JS_Stash11hours,6500;6575;РЕКОМЕНДАЦИИ ПО ИЗУЧЕНЮ МАТЕРИАЛА;0;0;0;0,JS_Stash11hours,6575;6667;КАКОЙ ОПЕРАТОР И В КАКОЙ ПОРЯДКЕ ИСПОЛЬЗУЕТСЯ ДЛЯ УДАЛЕНИЯ СВОЙСТВО ОБЪЕКТА;0;0;0;1,JS_Stash11hours,6667;6954;РАБОТА СО СВОЙСТВАМИ ОБЪЕКТА С ИСПОЛЬЗОВАНИЕ СИНТАКСИСА КВАДРАТНЫХ СКОБОК (bracket notation), В ЧЕТ ТАКОЙ СИНТАКСИС УДОБНЕЕ;0;0;0;1,JS_Stash11hours,6954;7155;РАБОТА СО СВОЙСТВАМИ ВЛОЖЕННЫХ ОБЪЕКТОВ JS;0;0;0;1,JS_Stash11hours,7155;7248;ИСПОЛЬЗОВАНИЕ ПЕРЕМЕННЫХ И ВЫРАЖЕНИЙ ДЛЯ СВОЙСТВ ОБЪЕКТА JS;0;0;0;1,JS_Stash11hours,7248;7405;СОКРАЩЕННЫЙ ФОРМАТ ЗАПИСИ СВОЙСТВ;0;0;0;1,JS_Stash11hours,7405;7565;ГЛОБАЛЬНЫЕ ОБЪЕКТЫ;0;0;0;1,JS_Stash11hours,  7565;7624;УНИФИЦИРОВАННЫЙ ГЛАБАЛЬНЫЙ ОБЪЕКТ globalThis,JS_Stash11hours,7624;7739;СВОЙСТВА ГЛОВАЛЬНЫХ ОБЪЕКТОВ;0;0;0;1,JS_Stash11hours,7739;7759;ОПРЕДЕЛЕНИЕ МЕТОДА;0;0;0;1,JS_Stash11hours,7759;7891;ВЫЗОВ МЕТОДА;0;0;0;1,JS_Stash11hours,7891;7966;КРАТКАЯ ЗАПИСЬ МЕТОДА (.БЕЗ function:);б,JS_Stash11hours,7966;7992;ДОСТУП К СВОЙСТВУ ОБЪЕКТА;0;0;0;1,JS_Stash11hours,7992;8015;ВЫЗОВ МЕТОДА;0;0;0;1,JS_Stash11hours,8015;8023;КАКАЯ ОШИБКА ОТОБРАЖАЕТСЯ ПРИ ВЫХОВЕ МЕТОДА ОБЪЕКТА С ДОБАВЛЕНИЕМ СКОБОК;0;0;0;1,JS_Stash11hours,8023;8047;ЧЕМ НА САМОМ ДЕЛЕ ЯВЛЯЮТСЯ МЕТОДЫ;0;0;0;1,JS_Stash11hours,8047;8060;ЧТО ТАКОЕ JSON;0;0;0;1,JS_Stash11hours,8060;8176;ЧЕМ ОТЛИЧАЕТСЯ СИНТАКСИС JSON ОТ СИНТАКСИСА ОБЪЕКТА JS;0;0;0;1,JS_Stash11hours,8176;8194;В КАКОМ ВИДЕ ДАННЫЕ JSON ПЕРЕДАЮТСЯ МЕЖДУ КОМПЬЮТЕРАМИ;0;0;0;1,JS_Stash11hours,8194;8277;КАК КОНВЕРТИРОВАТЬ JSON СТРОКУ В JS ДОКУМЕНТ;0;0;0;1,JS_Stash11hours,8277;8323;КАК КОНВЕРТИРОВАТЬ ОБЪЕКТ JS В JSON СТРОКУ;0;0;0;1,JS_Stash11hours,8323;8541;ПРАКТИЧЕСКАЯ ДЕМОНСТРАЦИЯ КОНВЕРТАЦИИ JSON В JS И НАОБОРОТ;0;0;0;1,JS_Stash11hours,8541;8666;С ПОМОЩЬЮ КАКОЙ ВКЛАДКИ БРАУЗЕР И КАКИМ СПОСОБОМ МОЖНО ПРОАНАЛИЗИРОВАТЬ ДАННЫЕ ПОЛУЧЕННЫЕ КОМПЬЮТЕРОМ С ДРУГИХ СЕРВЕРОВ;1;0;0;1,JS_Stash11hours,  8666;8710;ИТОГИ ПРОЙДЕННОЙ ТЕМЫ JSON;0;0;0;0,JS_Stash11hours,8710;8844;ПРИМЕР КОПИРОВАНИЕ ПЕРЕМЕННЫХ ИСПОЛЬЗУЮЩИХ ПРИМИТИВНЫЕ ТИПЫ;0;0;0;0,JS_Stash11hours,8844;8954;ПРИМЕР ИЗМЕНЕНИЯ (МУТАЦИИ ОБЪЕКТА);0;0;0;1,JS_Stash11hours,8954;9131;СПЕЦИФИКА МУТИРОВАНИЯ ЧЕРЕЗ КОПИЮ ССЫЛКИ ОБЪЕКТА;0;0;0;1,JS_Stash11hours,9131;9406;КОПИРОВАНИЕ ОБЪЕКТА НЕ ИМЕЮЩЕГО ВЛОЖЕННЫХ ОБЪЕКТОВ;0;0;0;1,JS_Stash11hours,9406;9551;ВТОРОЙ ВАРИАНТ КОПИРОВАНИЯ ОБЪЕКТА  (БЕЗ ВЛОЖЕННЫХ ОБЪЕКТОВ);0;0;0;1,JS_Stash11hours,  9551;9730;КОПИРОВАНИЕ ОБЪЕКТА С ИЗБЕЖАНИЕМ СЛУЧАЙЧНОЙ МУТАЦИИ ПУТЕМ ДВОЙНОГО КОНВЕРТИРОВАНИЯ,JS_Stash11hours,  9730;9753;Вступление по теме  - функции,JS_Stash11hours,9753;9760;ОПРЕДЕЛЕНИЕ ЧТО ТАКОЕ ФУНКЦИЯ;0;0;0;1,JS_Stash11hours,9760;9870;ПРАКТИЧЕСКИЙ ПРИМЕР ПОВТОРЕНИЯ БЛОКА КОДА;0;0;0;0,JS_Stash11hours,9870;9988;ПРАКТИЧЕСКИ ПРИМЕР ОПТИМИЗАЦИИ КОДА С ПОВТОРЯЮЩИМИСЯ БЛАКАМИ ПУТЕМ СОЗДАНИЯ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,9988;10027;ПРОДОЛЖЕНИЕ ПРИМЕРА СОЗДАНИЯ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,10027;10101;КАКИЕ МОГУТ БЫТЬ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,10101;10114;ЧЕМ ЯВЛЯЕТСЯ ФУНКЦИЯ И ЧТО У НЕЕ ИМЕЮТСЯ;0;0;0;1,JS_Stash11hours,10114;10197;ДЕМОНСТРАЦИЯ СТУКТУРЫ ФУНКЦИИ КАК ОБЪЕКТА;0;0;0;1,JS_Stash11hours,10197;10214;ЗАДАНИЕ ПО ТЕМЕ;0;0;0;0,JS_Stash11hours,10214;10409;ПОДРОБНОЕ РАССМОТРЕНИЕ СТРОЕНИЯ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,10409;10437;В КАКОМ СЛУЧАЕ ФУРКЦИЯ ВОЗВРАЩАЕТ UNDEFINED ?;0;0;0;1,JS_Stash11hours,10437;10456;ПРИМЕР ВОЗВРАТА ФУРКЦИЕЙ UNDEFINED НА ПРИМЕРЕ ФУНКЦИИ CONSOLE.LOG();0;0;0;0,JS_Stash11hours,10456;10542;ЧТО ТАКОЕ АРГУМЕНТЫ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,10542;10553;ЧТО ТАКОЕ ПАРАМЕТРЫ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,10553;10681;РЕЗЕМИРОВАНИЕ ПО ТЕМЕ УСТРОЙСТВА ФУНКЦИИ И ЕЕ ВХОДНЫХ ЗНАЧЕНИЙ;0;0;0;0,JS_Stash11hours,10681;10756;ЗНАЧЕНИЯ ФУНКЦИИ КОТОРЫЕ ЯВЛЮТСЯ ОПЦИОНАЛЬНЫМИ;0;0;0;1,JS_Stash11hours,10756;10825;САМАЯ КОРОТКАЯ ФУНКЦИЯ КОТОРАЯ ВОЗВРАЩАЕТ undefined;0;0;0;1,JS_Stash11hours,10825;11057;ПРАКТИЧЕСКИЙ ПРИМЕР И РАЗБОР РАБОТЫ ФУНКЦИИ С АРГУМЕНТОМ В ВИДЕ ОБЪЕКТА. УКАЗАНИЕ О ТОМ, ЧТО НЕ РЕКОМЕНДУЕТСЯ МУТИРОВАТЬ ОБЪЕКТ В ФУНКЦИИ;0;0;0;0,JS_Stash11hours,11057;11217;ПРИМЕР ФУНКЦИИ ИСПОЛЬЗУЮЩИХ ОБЪЕКТЫ НЕ МЕНЯЯ ОРИГИНАЛЫ ЭТИХ ОБЪЕКТОВ;0;0;0;1,JS_Stash11hours,  11217;11254;РЕЗЮМЕ РЕКОМЕНДАЦИИ НЕ МЕНЯТЬ В ФУНКЦИИ ВНЕШНИЕ ОБЪЕКТЫ,JS_Stash11hours,11254;11413;callbackFunction();0;0;0;1,JS_Stash11hours,11413;11529;ПРИМЕР callbackFunction();0;0;0;1,JS_Stash11hours,11529;11636;ПРАКТИЧЕСКИЙ ПРИМЕР РАБОТЫ callbackFunction();0;0;0;1,JS_Stash11hours,11636;11653;ДОПОЛНЕНИЕ ПО ТЕМЕ callbackFunction();0;0;0;0,JS_Stash11hours,11653;11662;ПЕРВОЕ ПРАВИЛО РАБОТЫ С ФУНКЦИЯМИ;0;0;0;0,JS_Stash11hours,11662;11675;ДОПОЛНЕНИЕ ПО ПЕРВОМУ ПРАВИЛУ;0;0;0;0,JS_Stash11hours,11675;11707;ВТОРОЕ ПРАВИЛО РАБОТЫ С ФУНКЦИЯМИ;0;0;0;0,JS_Stash11hours,11707;11756;ТРЕТЬЕ ПРАВИЛО РАБОТЫ С ФУНКЦИЯМИ;0;0;0;0,JS_Stash11hours,  11756;11800;ПОВТОРЕНИЕ ПРОЙДЕННОГО ПО ТЕМЕ ФУНКЦИИ,JS_Stash11hours,  11800;11813;ЧТО ОПРЕДЕЛЯЕТ ОБЛАСТЬ ВИДИМОСТИ,JS_Stash11hours,11813;11853;ПРИМЕРЫ ГЛАБОЛЬНЫХ ПЕРЕМЕННЫХ И ГЛОБАЛЬНАЯ ОБЛАСТЬ ВИДИМОСТИ;0;0;0;1,JS_Stash11hours,11853;11972;ЛОКАЛЬНАЯ ОБЛАСТЬ ВИДИМОСТИ. КАКАЯ ПЕРЕМЕННАЯ БУДЕТ ДОСТУПНА В ЛОК. ОБЛАСТИ ЕСЛИ ОБЪЯВЛЕНЫ ПЕРЕМЕННЫЕ С АНАЛОГИЧНЫМИ ИМЕНАМИ КАК В ЛОК. ТАК И В ГЛОБ. ОБЛАСТЯХ;0;0;0;1,JS_Stash11hours,11972;11992;РЕЗЮМЕ ПО ТЕКУЩЕМУ ВОПРОСУ ТЕКУЩЕЙ ТЕМЫ;0;0;0;0,JS_Stash11hours,11992;12484;ДОСТУП МЕЖДУ ЛОК. И ГЛОБ. ОБЛАСТЯМИ. ДОСТУП И ВЗАИМОДЕЙСТВИЕ В ЦЕПОЧКАХ ОБЛАСТЕЙ ВИДИМОСТИ;0;0;0;1,JS_Stash11hours,12484;12746;ПРОДОЛЖЕНИЕ. ВЗАИМОДЕЙСТВИЕ ОБЛАСТЕЙ ВИД. ЖИЗНЕННЫЕ ЦИКЛЫ ИХ ПЕРЕМЕННЫХ;0;0;0;1,JS_Stash11hours,  12746;12996;ПРАКТИЧЕСКИЙ ПРИМЕР ИЗМЕНЕНИЯ ГЛОБ. ПЕРЕМЕННОЙ В ЛОК. ОБЛАСТИ ФУНКЦИИ, ЧТО НЕ РЕКОМЕНДУЕТСЯ ДЕЛАТЬ.  ЧТО НЕОБХОДИМО ОБЯЗАТЕЛЬНО ДЕЛАТЬ, ЧТОБЫ ЭТОГО ИЗБЕЖАТЬ,JS_Stash11hours,12996;13089;ВИДЫ ОБЛАСТЕЙ. ЧТО ТАКОЕ ОБЛАСТЬ ВИДИМОСТИ БЛОКА;0;0;0;1,JS_Stash11hours,  13089;13205;НЕ РЕКОМЕНДУЕМОЕ АВТОМАТИЧЕСКОЕ ОБЪЯВЛЕНИЕ ПЕРЕМЕННОЙ. В КАКОЙ ОБЛАСТИ НЕ ЗАВИСИМО О ЛАКАЦИИ ВЫЗОВА БУДЕТ СОЗДАНА АВТОМАТИЧЕСКИ ПЕРЕМЕННАЯ,JS_Stash11hours,13205;13205;13244;ПРАВИЛА РАБОТЫ С ПЕРЕМЕННЫМИ;0;0;0;1,JS_Stash11hours,13244;13267;ЧТО НЕОБХОДИМО ДЕЛАТЬ ЧТОБЫ НЕ ИЗМЕНЯТЬ ПЕРЕМЕННЫЕ С ВНЕШНИХ ОБЛАСТЕЙ ВИДИМОСТИ В ФУНКЦИИ;0;0;0;1,JS_Stash11hours,13267;13277;ЧЕМ ЯВЛЯЮТСЯ ЗНАЧЕНИЯ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,13277;13444;ВКЛЮЧЕНИЕ СТРОГО РЕЖИМА ('use strict');0;0;0;1,JS_Stash11hours,13444;13477;ВСТУПЛЕНИЕ ПО ТЕМЕ ОПЕРАТОРЫ ПРИСВАИВАНИЯ;0;0;0;0,JS_Stash11hours,13477;13504;ЧТО ТАКОЕ ОПЕРАТОР В JS;0;0;0;1,JS_Stash11hours,13504;13531;ВВЕДЕНИЕ В ТЕМУ ОПЕРАТОРЫ;0;0;0;1,JS_Stash11hours,13531;13540;АРИФМЕТИЧЕСКИЕ ОПЕРАТОРЫ;0;0;0;1,JS_Stash11hours,13540;13551;ОПЕРАТОРЫ СРАВНЕНИЯ;0;0;0;1,JS_Stash11hours,13551;13560;ЛОГИЧЕСКИЕ ОПЕРАТОРЫ;0;0;0;1,JS_Stash11hours,13560;13584;ОПЕРАТОР ПРИСВАИВАНИЯ;0;0;0;1,JS_Stash11hours,13584;13606;СПИСОК В ОСНОВНОМ ИСПОЛЬЗУЕМЫХ ОПЕРАТОРОВ JS;0;0;0;1,JS_Stash11hours,13606;13649;ДРУГИЕ (ТЕКСТОВЫЕ) ОПЕРАТОРЫ;0;0;0;1,JS_Stash11hours,13649;13686;ИНОЙ ОПЕРАТОР (ЗАПЯТАЯ) ПРИМЕР;0;0;0;1,JS_Stash11hours,13686;13784;ПРАКТИЧЕСКИЙ ПРИМЕР ИСПОЛЬЗОВАНИЯ ОПЕРАТОРОВ;0;0;0;0,JS_Stash11hours,13784;13990;ПРИМЕРНАЯ СХЕМА РАБОТЫ ВНУТРЕННЕЙ ФУНКЦИИ ОПЕРАТОРА ПРИСВАИВАНИЯ;0;0;0;1,JS_Stash11hours,13990;14012;ЧТО ТАКОЕ ОПЕРАНДЫ (АРГУМЕНТЫ);0;0;0;1,JS_Stash11hours,14012;14129;УНАРНЫЕ ОПЕРАТОРЫ;0;0;0;1,JS_Stash11hours,14129;14251;БИНАРНЫЕ ОПЕРАТОРЫ;0;0;0;1,JS_Stash11hours,14251;14296;ИНФИКСНАЯ ЗАПИС;0;0;0;1,JS_Stash11hours,14296;14344;ПРЕФИКСНАЯ ЗАПИСЬ;0;0;0;1,JS_Stash11hours,14344;14392;ПОСТФИКСНАЯ ЗАПИСЬ;0;0;0;1,JS_Stash11hours,    14392;14598;ПРИОРИТЕТНОСТЬ ОПЕРАТОРОВ, РЕКОМЕНДАЦИИ ПО УСТАНОВЛЕНИЮ ИХ ПОРЯДКА ИСПОЛНЕНИЯ,JS_Stash11hours,14598;14620;оператоп НЕ(!);0;0;0;1,JS_Stash11hours,14620;14639;оператор И (&&) оператор ИЛИ ( || );0;0;0;1,JS_Stash11hours,14639;14658;КАКОЕ ЗНАЧЕНИЕ ВСЕГДА ВОЗВРАЩАЕТ ОПЕРАТОР - НЕ (!);0;0;0;1,JS_Stash11hours,14658;14674;КАКОЕ ЗНАЧЕНИЕ ВСЕГДА ВОЗВРАЩАЕТ ОПЕРАТОРЫ И (&&)  ИЛИ (| | );0;0;0;1,JS_Stash11hours,14674;14681;КАКИЕ ИМЕННО ЗНАЧЕНИЯ ВСЕГДА ВОЗВРАЩАЕТ ОПЕРАТОР - НЕ (!);0;0;0;1,JS_Stash11hours,14688;14701;ЧТО ТАКОЕ В JS ЛОЖНЫЕ ЗНАЧЕНИЯ;0;0;0;1,JS_Stash11hours,    14701;14733;КАК В JS ПРИВЕСТИ КАКОЕ-ЛИБО ЗНАЧЕНИЕ К ЛОГИЧЕСКОМУ ТИПУ,JS_Stash11hours,14733;14795;СПИСОК ЛОЖНЫХ ЗНАЧЕНИЙ КОТОРЫЕ НАИБОЛЕЕ ЧАСТО МОГУТ БЫТЬ ИСПОЛЬЗОВАНЫ В РАБОТЕ С JS;0;0;0;1,JS_Stash11hours,14795;14877;ПРАКТИЧЕСКИЕ ПРИМЕРЫ РАБОТЫ ФУНКЦИИ BOOLEAN();0;0;0;0,JS_Stash11hours,14877;15004;ПРАКТИЧЕСКИЙ ПРИМЕР ИСПОЛЬЗОВАНИЯ ФУНКЦИИ typeof (в том числе для проверки типа данных переменной);б,JS_Stash11hours,15004;15056;ПРОДОЛЖЕНИЕ. ИСПОЛЬЗОВАНИЕ ФУНКЦИИ typeof ДЛЯ ПРОВЕРКИ ТИПА ДАННЫХ ПЕРЕМЕННОЙ;0;0;0;1,JS_Stash11hours,15056;15134;ПРИМЕРЫ С ОПЕРАТОРОМ !;0;0;0;0,JS_Stash11hours,15134;15198;ИСПОЛЬЗОВАНИЕ ДВОЙНОГО ОТРИЦАНИЯ (!!) ДЛЯ КОНВЕРТАЦИИ ЗНАЧЕНИЯ В ЛОГИЧЕСКИЙ ТИП;0;0;0;1,JS_Stash11hours,15198;15216;ЗАДАНИЕ ПРОВЕРИТЬ ЛОГИЧЕСКОЕ ЗНАЧЕНИЕ ПУСТОГО ОБЪЕКТРА С ПОМОЩЬЮ !!;0;0;0;0,JS_Stash11hours,15216;15617;ПОРЯДОК РАБОТЫ ОПЕРАТОРОВ И (&&) ИЛИ ( || );0;0;0;1,JS_Stash11hours,  15617;15814;ТРЮК ЧАСТО ИСПОЛЬЗУЕМЫЙ В JS ДЛЯ ЗАПУСКА ФУНКЦИИ В ЗАВИСИМОСТИ ОТ ЛОГИЧЕСКОГО ЗАНЧЕНИЯ КАКОЙ-ЛИБО ПЕРЕМЕННОЙ,JS_Stash11hours,15814;15953;ЦЕПОЧКИ ОПЕРАТОРОВ && И ||;0;0;0;1,JS_Stash11hours,15953;15963;ЗАДАНИЕ ПО ТЕКУЩЕМУ ВОПРОСУ ТЕКУЩЕЙ ТЕМЫ;0;0;0;0,JS_Stash11hours,  15963;16167;ОПЕРАТОР РАЗДЕЛЕНИЯ НА СВОЙСТВА ...,JS_Stash11hours,16167;16255;ПРАКТИЧЕСКИЙ ПРИМЕР СОЗДАНИЯ НОВОГО ОБЪЕКТА ОБЪЕДИТЕНИЕМ 2-Х ДРУГИХ ОБЪЕКТОВ С ИСПОЛЬЗОВАНИЕ ОПЕРАТОРА РАЗДЕЛЕНИЯ СВОЙСТВ;0;0;0;1,JS_Stash11hours,  16255;16293;ДОПОЛНЕНИЕ ПО ИСПОЛЬЗОВАНИЮ ОПЕРАТОРА РАЗДЕЛЕНИЯ СВОЙСТВ,JS_Stash11hours,16293;16360;КОНКАТЕНАЦИЯ СТРОК;0;0;0;1,JS_Stash11hours,16360;16436;ИСПОЛЬЗОВАНИЕ ПЕРЕМЕННЫХ ПРИ КОНКАНТЕНАЦИИ СТРОК;0;0;0;1,JS_Stash11hours,16436;16535;ИСПОЛЬЗОВАНИЕ ДЛЯ КОНКАНТЕНАЦИИ ШАБЛОННЫХ СТРОК;0;0;0;1,JS_Stash11hours,16535;16565;ЗАДАНИЕ ПО ТЕКУЩЕМУ ВОПРОСУ ТЕКУЩЕЙ ТЕМЫ;0;0;0;0,JS_Stash11hours,16565;16657;АВТОМАТИЧЕСКАЯ КОНВЕРТАЦИЯ ТИПОВ;0;0;0;1,JS_Stash11hours,16657;16670;ЗАКЛЮЧИТЕЛЬНЫЙ КОММЕНТАРИЙ ПО ТЕМЕ КОНКАНТЕНАЦИЯ СТРОК;0;0;0;0,JS_Stash11hours,16670;16694;ВСТУПЛЕНИЕ ПО ТЕМЕ ФУНКЦИОНАЛЬНЫЕ ВЫРАЖЕНИЯ;0;0;0;0,JS_Stash11hours,16694;16813;КАКАЯ ИМЕЕТСЯ ЕДИНСТВЕННАЯ РАЗНИЦА МЕЖДУ СИНТАКСИСОМ ИМНОВАННОЙ ФУНКЦИИ И ФУНКЦИОНАЛЬНЫМ ВЫРАЖЕНИЕМ;0;0;0;1,JS_Stash11hours,16813;16821;КАКИМИ ВСЕГДА ЯВЛЯЮТСЯ ФУНКЦИОНАЛЬНЫЕ ВЫРАЖЕНИЯ;0;0;0;1,JS_Stash11hours,16821;16843;ПЕРВОЕ ОТЛИЧИЕ МЕЖДУ ФУНКЦИЕЙ И ФУНК.ВЫРАЖЕНИЕМ;0;0;0;1,JS_Stash11hours,  16843;16870;ВТОРОЕ ОТЛИЧИЕ МЕЖДУ ФУНКЦИЕЙ И ФУНК.ВЫРАЖЕНИЕМ,JS_Stash11hours,16870;16897;ОБЩЕЕ СХОДСТВО В ФУНКЦИОНАЛЬНОСТИ МЕЖДУ ИМЕНОВАННЫМИ ФУНКЦИЯМИ И ФУНКЦ.ВЫРАЖЕНИЯМИ (ЧТО ПОЗВОЛЯЕТ К Ф.ВЫРАЖЕНИЮ ОБРАЩАТЬСЯ ПО ИМЕНИ);0;0;0;1,JS_Stash11hours,16897;16929;ВТОРОЕ ОБЩЕЕ СВОЙСТВО ФУНКЦИОНАЛЬНОСТИ ИМЕНОВАННОЙ ФУНКЦИИ И ФУНКЦ.ВЫРАЖЕНИЯ;0;0;0;1,JS_Stash11hours,16929;16966;ЧТО И ПОЧЕМУ ЧАЩЕ ИСПОЛЬЗУЕТСЯ В КАЧЕСТВЕ КОЛБЭК ФУНКЦИЙ;0;0;0;1,JS_Stash11hours,16966;17065;ПРИМЕР ПРИСВАИВАНИЯ ФУНКЦ.ВЫРАЖЕНИЙ ПЕРЕМЕННОЙ;0;0;0;0,JS_Stash11hours,  17065;17144;ПРИМЕР ИСПОЛЬЗОВАНИЯ ФУНКЦИОНАЛЬНОГО ВЫРАЖЕНИЯ В ВЫЗОВЕ ДРУГОЙ ФУНКЦИИ,JS_Stash11hours,17144;17157;ВНЕШНИИ ОСОБЕННОСТИ СТРЕЛОЧНЫХ ФУНКЦИЙ;0;0;0;1,JS_Stash11hours,17157;17229;СТРОЕНИЕ СТРЕЛОЧНОЙ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,17229;17264;ОСОБЕННОСТИИ СТРЕЛОЧНЫХ ФУНКЦИЙ;0;0;0;1,JS_Stash11hours,17264;17327;КАК ДАТЬ ИМЯ СТРЕЛОЧНОЙ ФУНКЦИИ И КАК ЕЕ ПО НЕМУ ВЫЗВАТЬ;0;0;0;1,JS_Stash11hours,17327;17387;ПО КАКОЙ ПРИЧИНЕ РЕКОМЕНДУЕТСЯ ИСПОЛЬЗОВАТЬ СТРЕЛОЧНЫЕ ФУНКЦИИ И ВЫРАЖЕНИЯ;0;0;0;1,JS_Stash11hours,17387;17410;ОПИСАНИЕ РАБОТЫ СТРЕЛОЧНОЙ ФУНКЦИИ;0;0;0;0,JS_Stash11hours,17410;17472;ЕЩЕ ОДНА ПРИЧИНА ПО КОТОРОЙ МОЖЕТ БЫТЬ ПРЕДПОЧТИТЕЛЬНЕЙ ИСПОЛЬЗОВАТЬ СТРЕЛОЧНЫЕ ФУНКЦИИ;0;0;0;0,JS_Stash11hours,17472;17529;ПЕРВАЯ ФОРМА СОКРЕШЕНИЯ СТРЕЛОЧНОЙ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,17529;17638;ВТОРАЯ ФОРМА СОКРАЩЕНИЯ СТРЕЛОЧНОЙ ФУНКЦИИ С ДОБАВЛЕНИЕМ СВОЙСТВА НЕЯВНОГО ВОЗВРАЩЕНИЯ РЕЗУЛЬТАТА (Т.Е. БЕЗ СЛОВА RETURN);0;0;0;1,JS_Stash11hours,17638;17818;ЗНАЧЕНИЯ ПАРАМЕТРОВ ФУНКЦИИ ПО УМАЛЧАНИЮ;0;0;0;1,JS_Stash11hours,  17818;17850;ЗАДАНИЕ ПО ТЕКУЩЕМУ ВОПРОСУ ТЕКУЩЕЙ ТЕМЫ,JS_Stash11hours,17850;18443;ПРАКТИЧЕСКИЙ ПРИМЕР СТРЕЛОЧНОЙ ФУНКЦИИ С ИСПОЛЬЗВАНИЕ ВФНКЦИИ DATE() В КАЧЕСТВЕ ЗНАЧЕНИЯ ПО УМОЛЧАНИЮ С НЕЯВНЫМ ВОЗВРАТОМ РЕЗУЛЬТАТА В ВИДЕ ОБЪЕКТА;0;0;0;1,JS_Stash11hours,18443;18468;ЗАДАНИЕ ПО ТЕКУЩЕМУ ВОПРОСУ ТЕКУЩЕЙ ТЕМЫ (Т.Е. ТВТТ);0;0;0;0,JS_Stash11hours,18468;18498;ПОДВЕДЕНИЕ ИТОГОВ ПО ТЕМЕ ФУНКЦИИ;0;0;0;0,JS_Stash11hours,18498;18693;ВВЕДЕНИЕ В ТЕМУ ОБРАБОТКА ОШИБОК В JS;0;0;0;1,JS_Stash11hours,18656;18693;ПРИМЕР \"НЕ ПОЙМАННОЙ ОШИБКИ\" (Uncaught Error: Some error at fnWithError (<anonymous>:2:9) at <anonymoys>:5:1;0;0;0;1,JS_Stash11hours,18693;18808;ВЫРАЖЕНИЕ ПЕРЕХВАТА ОШИБОК TRY - CATCH;0;0;0;1,JS_Stash11hours,18808;19040;ПРАКТИЧЕСКИЙ ПРИМЕР И РЕКОМЕНДАЦИИ ИСПОЛЬЗОВАНИЯ ВЫРАЖЕНИЯ TRY-CATCH ДЛЯ ОБРАБОТКИ ОШИБОК;0;0;0;1,JS_Stash11hours,19040;19129;ВВЕДИЕ ПО ТЕМЕ ИНСТРУКЦИИ И ПОВТОРЕНИЕ ПОНЯТИЙ ВЫРААЖЕНИЕ (ВЫРАЖЕНИЕ, ИНСТРУКЦИЯ, ВЫРАЖЕНИЕ-ИНСТРУКЦИЯ);0;0;0;1,JS_Stash11hours,19129;19158;В ЧЕМ ОТЛИЧИЕ ИНСТРУКЦИИ ОТ ВЫРАЖЕНИЯ;0;0;0;1,JS_Stash11hours,19158;19355;ПРИМЕРЫ ИНСТУКЦИЙ В JS;0;0;0;1,JS_Stash11hours,19197;19206;КАК СЛЕДУЕТ ЗАКАНЧИВАТЬ (РАЗДЕЛЯТЬ) ИНСТУКЦИИ;0;0;0;1,JS_Stash11hours,19206;19215;КАК СЛЕДУЕТ РАЗДЕЛЯТЬ ИНСТУКЦИИ;0;0;0;1,JS_Stash11hours,19215;19339;ТРЕБУЮТ ЛИ ИНСТРУКЦИИ УСЛОВНОГО ПЕРЕХОДА ИЛИ ЦИКЛА ЗАКАНЧИВАЮЩИЕСЯ ФИГУРНОЙ СКОБКОЙ ОКОНЧАНИЯ ВВИДЕ ТОЧКИ С ЗАПЯТОЙ;0;0;0;1,JS_Stash11hours,19355;19395;ПОВТОРЕНИЕ НАЛИЧИ ПРАВИЛА ЗАКАНЦИВАТЬ ИНСТРУКЦИЮ ТОЧКОЙ С ЗАПЯТОЙ, А ТАКЖЕ ПОВТОРЕНИЕ ИСКЛЮЧЕНИЯ ИЗ ЭТОГО ПРАВИЛА;0;0;0;1,JS_Stash11hours,19395;19422;МОЖНО ЛИ ОПУСКАТЬ ТОЧКУ С ЗАПЯТОЙ;0;0;0;1,JS_Stash11hours,19422;19648;ПРИМЕРЫ ВЫРАЖЕНИЙ-ИНСТУКЦИЙ;0;0;0;1,JS_Stash11hours,19648;19688;ПО КАКИМ ПРИЗНАКАМ МОЖНО В ТОМ ЧИСЛЕ ОТЛИЧАТЬ ИНСТРУКЦИИ И ВЫРАЖЕНИЯ-ИНСТРУКЦИИ;0;0;0;1,JS_Stash11hours,19688;19705;СУЩЕСТВУЕТ ЛИ ПОНЯТИЕ ИНСТУКЦИЯ-ВЫРАЖЕНИЕ;0;0;0;1,JS_Stash11hours,19705;19994;ПРАКТИЧЕСКИЙ СПОСОБ ОТЛИЧИЯ ИНСТРУКЦИИ ОТ ВЫРАЖЕНИЯ;0;0;0;1,JS_Stash11hours,19994;20018;ЗАДАНИЕ ПО ТВТТ;0;0;0;0,JS_Stash11hours,    20018;20074;ПОДВЕДЕНИЕ ИТОГОВ РАССМОТРЕНИЯ ВОПРОСОВ ПО ТЕМЕ ИНСТУКЦИИ,JS_Stash11hours,20074;20104;ВВЕДЕНИЕ ПО ТЕМЕ МАССИВЫ. ОПРЕДЕЛЕНИЕ ЧТО ТАКОЕ МАССИВ;0;0;0;1,JS_Stash11hours,20104;20115;ПРОДОЛЖЕНИЕ ВВЕДЕНИЯ ПО ТЕМЕ МАССИВЫ;0;0;0;1,JS_Stash11hours,20115;20185;ПЕРВЫЙ ВАРИАНТ СОЗДАНИЯ МАССИВА. КАКИЕ ЭЛЕМЕНТЫ МОЖЕТ СОДЕРЖАТЬ МАССИВ;0;0;0;1,JS_Stash11hours,20185;20254;ВТОРОЙ ВАРИАНТ СОЗДАНИЯ МАССИВА;0;0;0;1,JS_Stash11hours,20254;20339;ПО КАКОЙ ПРИЧИНЕ МАССИВЫ ВШЕШНЕ СХОЖИЕ ПО ФАКТУ ПРИ СРАВНЕНИИ В ТЕРМИНАЛЕ С ПОМОЩЬЮ ОПЕРАТОРА СРАВНЕНИЯ НЕ ЯВЛЯЮТСЯ РАВНЫМИ;0;0;0;1,JS_Stash11hours,20339;20409;РАССМАТРЕНИЕ СТРУКТУРЫ МАССИВА;0;0;0;1,JS_Stash11hours,20409;20469;РАССМОТРЕНИЕ СТУКТУРЫ МАССИВА В ТЕРМИНАЛЕ БРАУЗЕРА. СВОЙСТВО myArray.length;0;0;0;1,JS_Stash11hours,20469;20484;ПО КАКОЙ ПРИЧИНЕ ДЛЯ ПОЛУЧЕНИЯ ЗНАЧЕНИЯ СВОЙСТВА myArray.length НЕ НАДО ДОБАВЛЯТЬ СКОБКИ КАК В ФУНКЦИИ;0;0;0;1,JS_Stash11hours,20484;20522;КАКОЕ ЗНАЧЕНИЕ ВСЕГДА СОДЕРЖИТ СВОЙСТВО myArray.length;0;0;0;1,JS_Stash11hours,20522;20660;ПРАКТИЧЕСКИЕ ПРИМЕРЫ СРАВНЕНИЯ МАССИВОВ КАК ОБЪЕКТОВ;0;0;0;1,JS_Stash11hours,  20660;20672;ЗАДАНИЕ,JS_Stash11hours,20672;20853;СРАВНЕНИЕ МЕЖДУ СОБОЙ МАССИВА И ОБЫЧНОГО ОБЪЕКТА;0;0;0;1,JS_Stash11hours,20853;20918;ПОЧЕМУ ДЛЯ ПОЛУЧЕНИЯ ДОСТУПА К ЗНАЧЕНИЯМ МАССИВА НЕЛЬЗЯ ИСПОЛЬЗОВАТЬ ТОЧЕЧНУЮ ЗАПИСЬ И ИСПОЛЬЗУЕТСЯ ЗАПИСЬ В ВИДЕ КВАДРАТНЫХ СКОБОК;0;0;0;1,JS_Stash11hours,20918;20933;ПРИМЕР ВЫВОДА ЗНАЧЕНИЯ ПЕРВОГО ЭЛЕМЕНТА МАССИВА;0;0;0;1,JS_Stash11hours,20933;20940;С КАКОГО ЗНАЧЕНИЯ НАЧИНАЕТСЯ МАССИВ;0;0;0;1,JS_Stash11hours,20940;20948;ПРИМЕР ОБРАЩЕНИЯ К 2-МУ ЭЛЕМЕНТУ МАССИВА С ВЫВОДОМ ЕГО ЗНАЧЕНИЯ;0;0;0;1,JS_Stash11hours,20948;20958;ОБРАЩЕНИЯ К 3-МУ ЭЛЕМЕНТУ МАССИВА;0;0;0;0,JS_Stash11hours,20958;20977;ОБЛАЩЕНИЕ К СВОЙСТВУ myArray.length (ДЛИНА МАССИВА);0;0;0;1,JS_Stash11hours,20977;21058;ПРИМЕР ПОПЫТКИ ИСПОЛЬЗОВАНИЯ ТОЧЕЧНЫЙ СИМВОЛ ДЛЯ ДОСТУПА К ЭЛЕМЕНТАМ МАССИВА;0;0;0;1,JS_Stash11hours,21058;21115;ПРИМЕР ИСКУСТВЕННОГО ИЗМЕНЕНИЯ ТЕКУЩЕГО ЗНАЧЕНИЯ СВОЙСТВА МАССИВА myArray.length;0;0;0;1,JS_Stash11hours,21115;21147;ИМЕЕТ ЛИ ЗНАЧЕНИЯ ПОРЯДОК ЭЛЕМЕНТОВ В МАССИВЕ;0;0;0;1,JS_Stash11hours,21147;21295;ПРИМЕР ИЗМЕНЕНИЯ И ДОБАВЛЕНИЯ ЭЛЕМЕНТОВ В МАССИВ;0;0;0;1,JS_Stash11hours,21295;21320;КАК ИЗМЕНЯЕТСЯ СВОЙСТВО МАССИВА myArray.legnh ПРИ ИЗМЕЕИЯ КОЛИЧЕСТВА ЭЛЕМЕНТОВ МАССИВА;0;0;0;0,JS_Stash11hours,21320;21493;ФУНКЦИИ ПРОТАТИПОВ (МЕТОДОВ) МАССИВА;0;0;0;1,JS_Stash11hours,21493;21628;МЕТОД МАССИВА PUSH;0;0;0;1,JS_Stash11hours,21628;21731;МЕТОД POP;0;0;0;1,JS_Stash11hours,21731;21812;МЕТОД UNSHIFT;0;0;0;1,JS_Stash11hours,21812;21852;МЕТОД SHIFT;0;0;0;1,JS_Stash11hours,21852;21914;ЧТО ДЕЛАЮТ ВСЕ РАССМОТРЕННЫЕ В ЭТОЙ СЕКЦИИ МЕТОДЫ И ПОЧЕМУ ОНИ ЭТО ДЕЛАЮТ ПРИ ИСПОЛЬЗОВАНИИ ХРАНЕНИЯ КОНСТАНТЫ;0;0;0;1,JS_Stash11hours,21914;22161;ПОПУЛЬРНЫЙ МЕТОД FOREACH;0;0;0;1,JS_Stash11hours,22161;22347;ПРАКТИЧЕСКИЙ ПРИМЕР КАК РАБОТАЕТ МЕТОД forEACH;0;0;0;1,JS_Stash11hours,22347;22603;РАБОТА МЕТОДА MAP;0;0;0;1,JS_Stash11hours,22603;22754;ПРИМЕР ПОЛУЧЕНИЯ ЗНАЧЕНИЯ ПРИ РАБОТЕ ФУНКЦИИ ЗНАЧЕНИЯ UNDEFINED ИЗ-ЗА ИСПОЛЬЗОВАНИЯ ИНОГО СИНТАКСИСА И НЕ ПРИМЕНЕНИЯ ОПЕРАТОРА RETURN;0;0;0;1,JS_Stash11hours,22754;22794;ОБЗОР ПРОЙДЕННОГО ПО ТЕМЕ МАССИВЫ;0;0;0;0,JS_Stash11hours,  22794;23072;ДЕСТРУКТУРИЗАЦИЯ ОБЪЕКТОВ,JS_Stash11hours,23072;23272;ДЕСТУКТУРИЗАЦИЯ МАССИВОВ;0;0;0;1,JS_Stash11hours,23272;23623;ДЕСТУКТУРИЗАЦИЯ В ФУНКЦИЯХ;0;0;0;1,JS_Stash11hours,23623;23643;ЗАДАНИЕ;0;0;0;0,JS_Stash11hours,23643;23696;ВСТУПЛЕНИЕ ПО ТЕМЕ ИНСТУКЦИИ УСЛОВНОГО ПЕРЕХОДА;0;0;0;1,JS_Stash11hours,23696;23859;Инстукция IF;0;0;0;1,JS_Stash11hours,23859;24183;ПРИМЕР РАБОТЫ ИНСТРУКЦИИ IF. ПРИМЕР ПРИМЕНЕНИЕ ОПЕРАТОРА !;0;0;0;1,JS_Stash11hours,24183;24243;Инструкция IF ELSE;0;0;0;1,JS_Stash11hours,24243;24348;ПРИМЕР РАБОТЫ ИНСТРУКЦИИ IF ELSE;0;0;0;0,JS_Stash11hours,24348;24442;Инстукция IF ELSE IF;0;0;0;1,JS_Stash11hours,24442;24549;СРАВНЕНИЕ РАБОТЫ ИТСТРУКЦИИ IF И ИНСТРУКЦИИ IF ELSE IF;0;0;0;1,JS_Stash11hours,24549;24725;ПРИМЕР РАБОТЫ ОПЕРАТОРА IF ELSE IF;0;0;0;1,JS_Stash11hours,24725;24933;ПРИМЕР ВЫПОЛНЕНИЯ ПРЕДЫДУЩЕГО ПРИМЕРА С ИСПОЛЬЗОВАНИЕМ ИНСТУКЦИИ IF, РЕКОМЕНДАЦИИ ПО ИСПОЛЬЗОВАНИЮ КОДА;0;0;0;1,JS_Stash11hours,24933;25396;ИСПОЛЬЗОВАНИЕ IF В ФУНКЦИЯХ;0;0;0;1,JS_Stash11hours,25396;25549;ИНСТРУКЦИЯ SWITCH;0;0;0;1,JS_Stash11hours,25549;25687;ПРИМЕР РАБОТЫ ИНСТРУКЦИИ SWITCH;0;0;0;1,JS_Stash11hours,25687;25752;ВВЕДЕНИЕ В ПОНЯНИЕ ТЕРНАРНЫЙ ОПЕРАТОР. СКОЛЬКО ОПЕРАНДОВ У ТЕРНАЛЬНОГО ОПЕРАТОРА;0;0;0;1,JS_Stash11hours,25752;25971;ОСОБЕННОСТИ И СИНТАКСИСЫ ТЕРНАЛЬНОГО ОПЕРАТОРА;0;0;0;1,JS_Stash11hours,25971;26099;ПРИМЕР ИСПОЛЬЗОВАНИЯ ТЕРНАЛЬНОГО ОПЕРАТОРА;0;0;0;0,JS_Stash11hours,26099;26252;ПРИМЕР № 2;0;0;0;1,JS_Stash11hours,  26252;26516;ПРИМЕР № 3. РЕКОМЕНДАЦИИ ПО ИСПОЛЬЗОВАНИЮ ТЕРНАЛЬНОГО ОПЕРАТОРА,JS_Stash11hours,26516;26733;ВСТУПЛЕНИЕ ПО ТЕМЕ ЦИКЛЫ;0;0;0;0,JS_Stash11hours,26733;26745;ЦИКЛЫ КОТОРЫЕ ИСПОЛЬЗУЮТСЯ В JS;0;0;0;1,JS_Stash11hours,26745;27069;ЦИКЛ FOR;0;0;0;1,JS_Stash11hours,27069;27120;КАКИЕ СРЕДСТВА РЕКОМЕНДУЕТСЯ ИСПОЛЬЗОВАТЬ ДЛЯ РАБОТЫ С МАССИВАМИ;0;0;0;1,JS_Stash11hours,27120;27216;ПРИМЕР ИСПОЛЬЗОВАНИЯ ЦИКЛА FOR ДЛЯ МАССИВА;0;0;0;1,JS_Stash11hours,27216;27403;ПРИМЕР ИСПОЛЬЗОВАНИЯ ДЛЯ РАБОТЫ МАССИВА МЕТОДА FOREACH;0;0;0;1,JS_Stash11hours,27403;27612;ЦИКЛ WHILE;0;0;0;1,JS_Stash11hours,27612;27778;ЦИКЛ DO WIHILE;0;0;0;1,JS_Stash11hours,  27778;27942;FOR IN ДЛЯ ОБЪЕКТОВ,JS_Stash11hours,27942;28066;ИСПОЛЬЗОВАНИЕ FOREACH ДЛЯ ОБЪЕКТОВ;0;0;0;1,JS_Stash11hours,28066;28361;ИСПОЛЬЗОВАНИЕ FOR IN ДЛЯ МАССИВА. ПОЧЕМУ ЛУЧШЕ ИСПОЛЬЗОВАТЬ FOREACH ДЛЯ МАССИВА;0;0;0;1,JS_Stash11hours,28361;28520;ЦИКЛ FOR OF. ЧТО ЛУЧШЕ ИСПОЛЬЗОВАТЬ ДЛЯ МАССИВА;0;0;0;1,JS_Stash11hours,28520;28574;ПОЧЕМУ ПРЯМО ИСПОЛЬЗОВАТЬ FOR OF ДЛЯ ОБЪЕКТОВ НЕЛЬЗЯ;0;0;0;1,JS_Stash11hours,28574;28635;ПОДВЕДЕНИЯ ИТОГОВ ПРОХЖДЕНИЯ ТЕМЫ ЦИКЛЫ;0;0;0;0,JS_Stash11hours,  28635;28771;ВВЕДЕНИЕ ПО ТЕМЕ МОДУЛИ,JS_Stash11hours,28771;28849;СИНТАКСИС EXPORT IMPORT ИЗ МОДУЛЯ В МОДУЛЬ;0;0;0;1,JS_Stash11hours,28849;29082;ДЕФОЛТНЫЙ СПОСОБ ЕКСПОРТА;0;0;0;1,JS_Stash11hours,29082;29140;ЧТО В БОЛЬШИНСТВЕ СЛУЧАЕВ НЕОБХОДИМО, ЧТО БЫ ПИСАТЬ КОД В МОДУЛЯХ;0;0;0;0,JS_Stash11hours,29140;29159;ЧТО ДОПОЛНИТЕЛЬНО НЕОБХОДИМО ДЛЯ РАБОТЫ С МОДУЛЯМИ В БРАЙЗЕРЕ;0;0;0;1,JS_Stash11hours,29159;29692;ПРИМЕР СОЗДАНИЯ ДВУХ СВЯЗАННЫХ ИМПОРТ-ЭКСПОРТОМ МОДУЛЕЙ В VSCode;0;0;0;1,JS_Stash11hours,29692;29782;ПРИМЕР ИМПОРТИРОВАНИЯ ДЕФОЛТНОГО ЭКСПОРТА ПОД ДРУГИМ ИМЕНЕМ ПЕРЕМЕННОЙ;0;0;0;0,JS_Stash11hours,29727;29750;ПРИМЕР ОДНОВРЕМЕННОГО ИЗМЕНЕНИЯ НЕСКОЛЬКИХ ИМЕН (ИЗ ТЕМЫ СНИППЕТЫ);0;0;1;0,JS_Stash11hours,29782;29866;ПРИМЕР НЕ ДОСТУПНОСТИ ЛОКАЛЬНОЙ ДОСТУПНОСТИ НЕ ИМПОТИРОВАННЫХ ПЕРЕМЕННЫХ (Т.Е. НЕ ДОСТУПНОСТИ НЕ В СОВЕМ МОДУЛЕ);0;0;0;1,JS_Stash11hours,29879;29909;ПОДВЕДЕНИЕ ИТОГОВ РАССМОТРЕНИЯ ИМПОРТ-ЭКСПОРТНОГО СИНТАКСИСА;0;0;0;0,JS_Stash11hours,29909;30064;СИНТАКСИС И ПРИМЕР ИМПОРТ-ЭКСПОРТА С НЕСКОЛЬКИМИ ПЕРЕМЕННЫМИ;0;0;0;1,JS_Stash11hours,29988;30038;ПОЧЕМУ ПРИ ТАКОМ СПОСОБЕ ЭКСПОРТА-ИМПОРТА ИМЕНА ИСПОЛЬЗУЕМЫХ ПЕРЕМЕННЫХ ДОЛЖНЫ СОВПАДАТЬ;0;0;0;1,JS_Stash11hours,30064;30157;ЛЕКСИКА И ПРИМЕР ПЕРЕИМЕНОВАНИЯ ПЕРЕМЕННЫХ ПРИ ИСПОЛЬЗОВАНИИ ПОИМЕННОГО ЭКСПОРТА ИМПОРТА;0;0;0;1,JS_Stash11hours,30157;30165;НАЧИНАЯ С КАКОЙ ВЕРСИИ NODE.JS ПОДДЕРЖИВАЕТ ES6 МОДУЛЯ;0;0;0;1,JS_Stash11hours,30165;30189;КАКОЙ ЕЩЕ ВИД ЭКСПОРТА ИМПОРТА МОЖЕТ ИСПОЛЬЗОВАТЬСЯ;0;0;0;1,JS_Stash11hours,  30189;30377;ПРАВИЛА РАБОТЫ С МОДУЛЯМИ,JS_Stash11hours,30377;30629;ПРАКТИЧЕСКИЙ ПРИМЕР ИМЕНОВАННОГО ИМПОРТА-ЭКСПОРТА ДВУХ ФУНКЦИЙ;0;0;0;1,JS_Stash11hours,30629;31019;ПРИМЕРЫ МОДУЛЕЙ В РЕАКТ;0;0;0;1,JS_Stash11hours,30660;30693;ПРОГРАММЫ mpm mpx;0;0;0;1,JS_Stash11hours,  31019;31067;ВСТУПЛЕНИЕ ПО ТЕМЕ КЛАССЫ И ПРОТАТИПЫ,JS_Stash11hours,  31067;31153;ВВЕДЕНИЕ ПО ТЕМЕ КЛАССЫ,JS_Stash11hours,  31153;31165;ЧТО ПОЗВОЛЯЮТ КЛАССЫ В JS,JS_Stash11hours,  31165;31221;ОБРАЗНЫЙ ПРИМЕР ЭКЗЕМПЛЯРА,JS_Stash11hours,  31221;31256;ЧТО МОГУТ ИМЕТЬ ЭКЗЕМПЛЯРЫ,JS_Stash11hours,  31256;31267;ОТ КУДА КРОМЕ ТОГО ЭКЗЕМПЛЯРЫ НАСЛЕДУЮТ СВОЙСТВА И МЕТОДЫ,JS_Stash11hours,  31267;31300;ЧЕМ ЯВЛЯЮТСЯ И КАК СОЗДАЮТСЯ В JS КЛАССЫ,JS_Stash11hours,  31300;31310;ОПРЕДЕЛЕНИЕ КЛАССА JS,JS_Stash11hours,    31310;31368;ПРИМЕР КЛАССА,JS_Stash11hours,  31368;31413;ЧТО ДЕЛАЕТ ПЕРЕМЕННАЯ this В JS,JS_Stash11hours,  31413;31440;КАКИМ ОБРАЗОМ МЕНЯЮТСЯ МЕТОДЫ В НОВОМ ЭКЗЕМПЛЯРЕ КЛАССА,JS_Stash11hours,  31440;31596;КОГДА ВЫЗЫВАЕТСЯ КОНСТРУКТОР И ЧТО ПРИ ЭТОМ В НЕМ ПРОИСХОДИТ,JS_Stash11hours,    31596;31605;ОБЗОР ПРИВИДЕННОГО ПРИМЕРА,JS_Stash11hours,  31605;31714;ПРИМЕР ИСПОЛЬЗОВАНИЯ МЕТОДА КЛАССА РАСПОЛОЖЕННОГО В ТЕЛЕ КЛАССА НО ЗА ПРЕДЕЛАМИ КОНСТРУКТОРА И ЕГО СВОЙСТВА.,JS_Stash11hours,31714;31762;КАКИЕ СВОЙСТВА И МЕТОДЫ НАСЛЕДУЮТСЯ. КОГДА СРАБАТЫВАЕТ КОНСТРУКТОР, А КОГДА ОСТАЛЬНЫЕ МЕТОДЫ ЭКЗЕМПЛЯРА КЛАССА;0;0;0;1,JS_Stash11hours,    31762;31870;СИНТАКСИС СОЗДАНИЯ НОВОГО ЭКЗЕМПЛЯРА КЛАССА. ЧТО НОВЫЙ ЭКЗ. БУДЕТ И ОТ КУДА НАСЛОДОВАТЬ. ЧТО ДЛЯ НЕГО ЯВЛЯЕТСЯ ПРОТАТИПОМ.,JS_Stash11hours,31870;32018;ПРИМЕР СОЗДАНИЯ ЭКЗЕМПЛЯРА КЛАССА. ДЕМОНСТРАЦИЯ ЕГО СОБСТВЕННЫХ И УНАСЛЕДОВАННЫХ МЕТОДОВ;0;0;0;1,JS_Stash11hours,32018;32103;ПОЧЕМУ В СОЗДАННОМ ЭКЗЕМПЛЯРЕ КЛАССА ИМЕЮТСЯ СВОЙСТВА И МЕТОДЫ ОБЪЕКТА;0;0;0;1,JS_Stash11hours,  32103;32146;БЛАГАДАРЯ ЧЕМУ КРОМЕ СОБСТВЕННЫХ СВОЙСТВ И МЕТОДОВ, И УНАСЛЕДОВАННЫХ ОТ ПРОРОДИТЕЛЯ, У ЭКЗЕМПЛЯРА КЛАССА ИМЕЮТСЯ В ДАННОМ СЛУЧАЕ И МЕТОДЫ ОБЪЕКТА,JS_Stash11hours,32146;32211;ЦЕПОЧКА ПРОТОТИПОВ;0;0;0;1,JS_Stash11hours,32211;32315;ПРОВЕРКА ПРИНАДЛЕЖНОСТИ ЭКЗЕМПЛЯРА КЛАССА ОПРЕДЕЛЕННОМУ КЛАССУ;0;0;0;1,JS_Stash11hours,  32315;32528;ПРИМЕР ИЗМЕНЕНИЯ СВОЙСТВА ЭКЗЕМПЛЯРА КЛ. ПУТЕМ ОББРАЩЕНИЯ К ФУНКЦИИ ЭТОГО ЭКЗЕМПЛЯРА,JS_Stash11hours,32528;32683;ДЕПОМСТРАЦИЯ ТОГО, ЧТО ОБЪЕКТНАЯ МОДЕЛЬ ИМИТИРУЕТСЯ В JS С ПОМОЩЬЮ ФУНКЦЦИЙ Т.К. JS НЕ ЯВЛЯЕТСЯ ОБЪЕКТНО ОРИЕНТИРОВАННЫМ ЯЗЫКОМ ПРОГРАММИРОВАНИЯ;0;0;0;1,JS_Stash11hours,32683;32872;ДЕМОНСТРАЦИЯ КАК НАСЛЕДУЮЩСЯ МЕТОДЫ ЭКЗЕМЛЯРАМИ;0;0;0;1,JS_Stash11hours,32872;32893;ПРОСМАТРИВАЕ СВОЙСТВА ЭКЗЕМПЛЯРА И ПОЛУЧАЕТ ДОСТУП К НЕМУ С ПОМОЩЬЮ ТОЧЕЧНОЙ ЗАПИС;0;0;0;1,JS_Stash11hours,32893;32908;ПРОСМАТРИВАЕМ ДРУГОЕ СВОЙСТВО ЭКЗЕМПЛЯРА;0;0;0;1,JS_Stash11hours,32908;32958;ПРИМЕР, ВЫЗЫВАЕМ МЕТОД ЭКЗЕМПЛЯРА И ИЗМЕНЯЕМ ЕГО СВОЙСТВО;0;0;0;1,JS_Stash11hours,32958;32995;ПОВТОР ДАННОГО ПРИМЕРА;0;0;0;0,JS_Stash11hours,32995;33043;ДЕМОНСТРАЦИЯ КАК ЭТО РАБОТАЕТ (НА ЧТО ВСЕГДА ССЫВАЕТСЯ ПЕРЕМЕННАЯ this);0;0;0;1,JS_Stash11hours,33043;33070;КОГДА СРАБАТЫВАЕТ КОНСТРУКТОР;0;0;0;1,JS_Stash11hours,33070;33078;ПРОДОЛЖЕНИЕ;0;0;0;1,JS_Stash11hours,33078;33265;КАК ПРОВЕРИТЬ ПРИНАДЛЕЖНОСТЬ СВОЙСТВА ЭКЗЕМПЛЯРУ ОБЪЕКТА;0;0;0;1,JS_Stash11hours,33265;33363;ЗАДАНИЕ (СОЗДАНИЕ НЕСКОЛЬКИХ ЭКЗЕМПЛЯРОВ ПРОВЕРКА ИХ СВОЙСТВ);0;0;0;1,JS_Stash11hours,33363;33384;КАКОЕ СЛОВО ИСПОЛЬЗУЕТСЯ ДЛЯ СОЗДАНИЯ СТАТИЧЕСКИХ МЕТОДОВ;0;0;0;1,JS_Stash11hours,33384;33390;ГДЕ ОН УКАЗВАЕТСЯ;0;0;0;1,JS_Stash11hours,33390;33472;ПРИМЕР СОЗДАНИЯ СТАТИЧЕСКОГО МЕТОДА (КОТОРЫЙ НЕ НАСЛЕДУЕТСЯ;0;0;0;1,JS_Stash11hours,33472;33512;ПРИМЕР ВЫЗОВА СТАТИЧЕСКОГО МЕТОДА;0;0;0;1,JS_Stash11hours,33512;33545;НА КАКОМ УРОВНЕ ДОСТУПНЫ СТАТИЧЕСКИЕ МЕТОДЫ И НАСЛУЮТСЯ ЛИ ОНИ;0;0;0;1,JS_Stash11hours,33545;33789;ПРАКТИЧЕСКИЙ ПРИМЕР ДЕМОНСТРИРУЮЩИЙ ОТЛИЧИЕ СТАТИЧЕСКОГО МЕТОДА И КАКИМ К НЕМУ МОЖНО ПОЛУЧИТЬ ДОСТУП;0;0;0;1,JS_Stash11hours,33789;34208;ПРИМЕР РАСШИРЕНИЯ ДРУГИХ КЛАССОВ;0;0;0;1,JS_Stash11hours,34208;34246;ДЕМОНСТРАЦИЯ ЦЕПОЧКИ ПРОТОТИПОВ ДЛЯ ПРЫДИДУЩЕГО ПРИМЕРА;0;0;0;1,JS_Stash11hours,34246;34412;КАКИМ СКРЫТЫМ СВОЙСТВОМ ОПРЕДЕЛЯЕТ ПРОТОТИП, ДЛЯ ЧЕГО СОЗДАТЕЛЯМИ JS СОЗДАНА ТАКАЯ КОНСТРУКЦИЯ;0;0;0;1,JS_Stash11hours,34412;34601;ПРИМЕР ТОГО, ЧТО ТАКИЕ ПРИМИТИВНЫЕ ТИПЫ КАК СТРАКА И ЧИСЛА ВЕДУТ СЕБЯ КАК ОБЪЕКТЫ;0;0;0;1,JS_Stash11hours,34601;34667;ЗАКЛЮЧЕНИЕ ПО ТЕМЕ КЛАССЫ И ЦЕПОЧКИ ПРОТОТИПОВ;0;0;0;1,JS_Stash11hours,34667;34700;ВСТУПЛЕНИЕ ПО ТЕМЕ ПРОМИСЫ;0;0;0;0,JS_Stash11hours,34700;34708;ЧТО ТАКОЕ ПРОМИСЫ;0;0;0;1,JS_Stash11hours,34708;34877;ВВЕДЕНИЕ В ТЕМУ ПРОМИСЫ;0;0;0;1,JS_Stash11hours,34877;34933;ПРИМЕРНАЯ СХЕМА РАБОТЫ ПРОМИСА И ЧЕМ ОН ЯВЛЯТСЯ ПО СУТИ;0;0;0;1,JS_Stash11hours,34933;34973;ЧТО МОЖЕТ ВОЗВРАЩАТЬ ПРОМИС;0;0;0;1,JS_Stash11hours,34973;35034;СОСТОЯНИЯ ПРОМИСА;0;0;0;1,JS_Stash11hours,35034;35260;СОЗДАНИЕ ПРОМИСА. КОММЕНТАРИЙ ЕГО ДЕЙСТВИЯ;0;0;0;1,JS_Stash11hours,35260;35513;ПОЛУЧЕНИЕ РЕЗУЛЬТАТ ПРОМИСА. ОПИСАНИЕ ЕГО РАБОТЫ;0;0;0;1,JS_Stash11hours,  35513;36603;ПРИМЕР И ОПИСАНИЕ РАБОТЫ ПРОМИСА,JS_Stash11hours,36603;36696;ПРИМЕР КОРРЕКТНОЙ ОБРАБОТКИ ОТВЕТА СЕРВЕРА;0;0;0;1,JS_Stash11hours,36696;36875;ПРИМЕР КОРРЕКТНОЙ ОБРАБОТКИ ОШИБКИ ВОЗНИКШЕЙ ИЗ-ЗА ОТСУТСТВИЯ ИНТРЕРНЕТ СОЕДИНЕНИЯ;0;0;1;1,JS_Stash11hours,36875;36914;ПОВТОРНЫЙ ПРИМЕР УСПЕШНОЙ РАБОТЫ ПРОМИСА;0;0;1;1,JS_Stash11hours,36914;37248;ПРИМЕР УПРАЩЕНИЯ ЗАПРОСОВ В ВЕББРАУЗЕРЕ;0;0;1;1,JS_Stash11hours,37248;37407;ИСПОЛЬЗОВАНИЕ ИМПОРТА-ЭКСПОРТА ДЛЯ ОРГАНИЗАЦИИ РАБОТЫ В КОДЕ ПРОМИСА ИПРИМЕР УПРОЩЕНИЯ РАБОТЫ С ПРОМИСОМ;0;0;1;1,JS_Stash11hours,37407;37420;ВСТУПЛЕНИЕ ПО ТЕМЕ СИМНТАКСИС ASSYNC/AWAIT;0;0;0;1,JS_Stash11hours,37420;37438;ЧТО ТАКОЕ ASYNC/AWAIT;0;0;0;1,JS_Stash11hours,37438;37445;КОГДА ПОЯВИЛСЯ СИНТАКСИС ASYNC/AWAIT;0;0;0;1,JS_Stash11hours,37445;37462;ЧТО ТАКОЕ АСИНХРОННАЯ ФУНКЦИЯ;0;0;0;1,JS_Stash11hours,37462;37474;КАКОЕ КЛЮЧЕВОЕ СЛОВО НЕОБХОДИМО ДОБАВИТЬ ДЛЯ СОЗДАНИЯ АСИНХРОННОЙ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,37474;37501;В КАКОЙ ЧАСТИ ФУНКЦИИ НЕОБХОДИМО ВСТАВИТЬ КЛЮЧЕВОЕ СЛОВО;0;0;0;1,JS_Stash11hours,  37501;37534;В КАКОЙ ЧАСТИ СТРЕЛОЧНОЙ ФУНКЦИИ (ИНОГО ФУНКЦИОНАЛЬНОГО ВЫРАЖЕНИЯ) ДОЛЖНО НАХООДИТСЯ КЛЮЧЕВОЕ СЛОВО,JS_Stash11hours,37534;37628;ОПИСАНИЕ ВЫПОЛНЕНИЯ АСИНХРОННОЙ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,37628;37704;ПРИМЕР ВЫПОЛНЕНИЯ АСИНХРОННОЙ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,37673;37681;ОЧИСТКА КОНСОЛИ ВЕБРАУЗЕРА;0;0;1;0,JS_Stash11hours,37681;37705;37787;ДОБАВЛЯЕМ В ФУНКЦИЮ МЕТОД then;б,JS_Stash11hours,37787;37892;ОБРАБОТКА ОШИБКИ В АСИНХРОННОЙ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,37892;37985;ПРИМЕР ВЫПОЛНЕНИЯ АСИНХРОННЫХ ДЕЙСТВИЙ В АСИНХРОННОЙ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,37985;38445;ПРАКТИЧЕСКИЙ ПРИМЕР ОЖИДАНИЯ(АСИНХРОННОГО ИСПОЛНЕНИЯ) В АСИНХРОННОЙ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,38445;39105;ПЕРЕХОД С КОДА С ПРОМИСАМИ НА КОД ASINC/AWAIT;0;0;0;1,JS_Stash11hours,39105;39283;РЕЗЮМИРОВАНИЕ ПО ТЕМЕ ПРОМИСЫ И АСИНХРОННЫЕ ФУНКЦИИ;0;0;0;1,JS_Stash11hours,39283;39309;ЗАКЛЮЧЕНИЕ ПО КУРСУ JS$;0;0;0;0,JS_Stash11hours,"