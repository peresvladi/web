I type
II subject
III enveroment
IV  items
V teacherp
VI teachern
VII teacher

INSERT INTO type (id, name_) VALUES
(1,'Lesson'),
(2,'Seminar');

SHOW COLUMNS FROM subject;

+----------+-------------+------+-----+---------+----------------+
| Field    | Type        | Null | Key | Default | Extra          |
+----------+-------------+------+-----+---------+----------------+
| id       | int         | NO   | PRI | NULL    | auto_increment |
| name_v   | varchar(10) | NO   |     | NULL    |                |
| platform | varchar(20) | NO   |     | NULL    |                |
| type_id  | int         | NO   | MUL | NULL    |                |
| number   | int         | NO   |     | NULL    |                |
+----------+-------------+------+-----+---------+----------------+

ALTER TABLE subject MODIFY COLUMN name_v VARCHAR(20) NOT NULL;

INSERT INTO subject (name_v, platform, type_id, number) VALUES
('MYSQL_L1.mp4', 'GB', 1, 1);

+----+--------------+----------+---------+--------+
| id | name_v       | platform | type_id | number |
+----+--------------+----------+---------+--------+
|  1 | MYSQL_L1.mp4 | GB       |       1 |      1 |
+----+--------------+----------+---------+--------+

ALTER TABLE subject ALTER COLUMN platform SET DEFAULT "GB";



ALTER TABLE subject MODIFY COLUMN name_v VARCHAR(20) NOT NULL;


CREATE TABLE topic (
id INT NOT NULL AUTO_INCREMENT,
PRIMARY KEY(id),
name TINYTEXT NOT NULL
)ENGINE=INNODB;

ALTER TABLE items RENAME COLUMN topic TO topic_id; /изменили имя столбца

ALTER TABLE items
ADD CONSTRAINT items_topicfk FOREIGN KEY (`topic_id`) REFERENCES topic(`id`); /добавили связь между таблицами

RENAME TABLE teachern TO teacherf; /переименование таблицы

ALTER TABLE teacher RENAME COLUMN name_id TO fname_id; /переименование столбца

SELECT t.*, f.* FROM teacher t RIGHT JOIN teacherf f ON f.id = t.fname_id; /RIGHT JOIN с выводом всех столбцов обеих таблиц

INSERT INTO topic (id) VALUES (null); /внесение в таблицу установленных по умолчанию данных одновременно во все поля (проверено, что работает только при установлении primary key значения auto incriment);

ALTER TABLE teacher MODIFY COLUMN id INT NOT NULL AUTO_INCREMENT; /установка свойства AUTO_INCREMENT


SELECT ProductName, ProductCount,                   /ПРИМЕР ИСПОЛЬЗОВАНИЕ CASE
    -> CASE
    -> WHEN ProductCount = 1
    -> THEN 'Товар заканчивается'
    -> WHEN ProductCount = 2
    -> THEN 'Мало товара'
    -> WHEN ProductCount = 3
    -> THEN 'Есть в наличии'
    -> ELSE 'Много товара'
    -> END AS Category
    -> FROM Products;
+-------------+--------------+---------------------+
| ProductName | ProductCount | Category            |
+-------------+--------------+---------------------+
| iPhoneX     |            3 | Есть в наличии      |
| iPhone8     |            2 | Мало товара         |
| Galaxv S9   |            2 | Мало товара         |
| GalaxvS8    |            1 | Товар заканчивается |
| P20Pro      |            5 | Много товара        |
+-------------+--------------+---------------------+
5 rows in set (0.00 sec)


 SELECT ProductName, Manufacturer,							/ПРИМЕР ИСПОЛЬЗОВАНИЯ IF
    -> If(ProductCount > 3, 'Много товара', 'Мало товара')
    -> FROM Products;
+-------------+--------------+-----------------------------------------------------+
| ProductName | Manufacturer | If(ProductCount > 3, 'Много товара', 'Мало товара') |
+-------------+--------------+-----------------------------------------------------+
| iPhoneX     | Aool         | Мало товара                                         |
| iPhone8     | Aoole        | Мало товара                                         |
| Galaxv S9   | Samsuno      | Мало товара                                         |
| GalaxvS8    | Samsuno      | Мало товара                                         |
| P20Pro      | Huawei       | Много товара                                        |
+-------------+--------------+-----------------------------------------------------+
5 rows in set (0.00 sec)

UPDATE Products										
    -> SET Price = Price + 3000;
Query OK, 5 rows affected (0.00 sec)
Rows matched: 5  Changed: 5  Warnings: 0 /ПРИМЕР ИСЕОЛЬЗОВАНИЯ UPDATE (УВЕЛИЧИЛИ ЗНАЧЕНИЕ ПОЛЯ Price на 3000)

mysql> SELECT * FROM Products;
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  1 | iPhoneX     | Aool         |            3 | 79000 |
|  2 | iPhone8     | Aoole        |            2 | 54000 |
|  3 | Galaxv S9   | Samsuno      |            2 | 59000 |
|  4 | GalaxvS8    | Samsuno      |            1 | 44000 |
|  5 | P20Pro      | Huawei       |            5 | 39000 |
+----+-------------+--------------+--------------+-------+
5 rows in set (0.00 sec)

													/ПРИМЕР УДАЛЕНИЯ ЗАПИСЕЙ ИМЕЮЩИХ ЗНАЧЕНИЕ 'Aool' в поле Manufacturer
 DELETE FROM products
    -> WHERE Manufacturer = 'Aool';
Query OK, 1 row affected (0.00 sec)

mysql> SELECT * FROM Products;
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  2 | iPhone8     | Aoole        |            2 | 54000 |
|  3 | Galaxv S9   | Samsuno      |            2 | 59000 |
|  4 | GalaxvS8    | Samsuno      |            1 | 44000 |
|  5 | P20Pro      | Huawei       |            5 | 39000 |
+----+-------------+--------------+--------------+-------+
4 rows in set (0.00 sec)


UPDATE Products SET Manufacturer = 'Apple' WHERE Manufacturer = 'Aoole'; /обновили значение поля





mysql> SELECT * FROM Products
    -> WHERE NOT Manufacturer = 'Samsung'; / ИСПОЛЬЗОВАНИЕ В ЗАПРОСЕ ОТРИЦАНИЯ - NOT (ВЫВОД ВСЕХ МАРОК КРОМЕ САМСУТГ)
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  2 | iPhone8     | Apple        |            2 | 54000 |
|  5 | P20Pro      | Huawei       |            5 | 39000 |
|  6 | iPhone X    | Apple        |            3 | 76000 |
+----+-------------+--------------+--------------+-------+
3 rows in set (0.00 sec)



mysql> SELECT * FROM Products
    -> WHERE Manufacturer IN ('Apple', 'Samsung'); / ПРИМЕР ИСПОЛЬЗОВАНИЯ IN
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  2 | iPhone8     | Apple        |            2 | 54000 |
|  3 | Galaxv S9   | Samsung      |            2 | 59000 |
|  4 | GalaxvS8    | Samsung      |            1 | 44000 |
|  6 | iPhone X    | Apple        |            3 | 76000 |
+----+-------------+--------------+--------------+-------+
4 rows in set (0.00 sec)

ALTER TABLE movies ADD language VARCHAR(20); /ДОБАВИТЬ СТОЛБЕЦ

ALTER TABLE movies DROP COLUMN language; /УДАЛИТЬ СТОЛБЕЦ

ALTER TABLE movies ADD FOREIGN KEY (id_director) REFERENCES directors (id); /ДОБАВИТЬ СВЯЗЬ МЕЖДУ ИМЕЮЩИМИСЯ УЖЕ СТОЛБЦАМИ ТАБЛИЦ (ТАБЛИ1А 1 СТОЛБЕЦ - id_directors, ТАБЛИЦА 2 СТОЛБЕЦ id) id (тип int) - ЯВЛЯЕСЯ ПЕРВИЧНЫМ КЛЮЧОМ ТАБЛИЦИ movies, а id_director (имеет тип int) является полем таблицы derectors

SELECT title AS TITLE, time AS TIME, CASE WHEN time >= 160 AND time 
< 170 THEN "CENTER" END AS timer FROM movies LEFT JOIN directors ON id_director = directors.id; /ИСПОЛЬЗОВАНИЕ CASE


SELECT title AS TITLE, time AS TIME, CASE WHEN time >= 160 AND time < 170 THEN "CENTER" WHEN time >= 142 AND time < 160 THEN "MIN" WHEN time > 170 THEN "BIG" END AS timer FROM movies LEFT JOIN directors ON id_director = directors.id;
+-----------------------------------------+------+--------+
| TITLE                                   | TIME | timer  |
+-----------------------------------------+------+--------+
| Harry Potter and the Philosophers Stone |  152 | MIN    |
| Harry Potter and the Chamber of Secrets |  162 | CENTER |
| The Green Mile                          |  188 | BIG    |
| Forrest Gump                            |  142 | MIN    |
+-----------------------------------------+------+--------+
4 rows in set (0.00 sec)                                     /ИСПОЛЬЗОВАНИЕ CASE


SELECT title AS TITLE, time AS TIME, CASE WHEN time >= 160 AND time
    -> < 170 THEN time *1.2 WHEN time >= 142 AND time < 160 THEN time * 1.1 WHEN time > 170 THEN time * 1.3 END AS timer FROM movies LEFT JOIN directors ON id_director = directors.id;
+-----------------------------------------+------+-------+
| TITLE                                   | TIME | timer |
+-----------------------------------------+------+-------+
| Harry Potter and the Philosophers Stone |  152 | 167.2 |
| Harry Potter and the Chamber of Secrets |  162 | 194.4 |
| The Green Mile                          |  188 | 244.4 |
| Forrest Gump                            |  142 | 156.2 |
+-----------------------------------------+------+-------+
4 rows in set (0.00 sec)  /ЕЩЕ ПРИМЕР ИСПОЛЬЗОВАНИЯ CASE


mysql> SELECT title, time, if (time < 160, 'yes', 'no') FROM movies LEFT JOIN directors ON id_director = directors.id;
+-----------------------------------------+------+------------------------------+
| title                                   | time | if (time < 160, 'yes', 'no') |
+-----------------------------------------+------+------------------------------+
| Harry Potter and the Philosophers Stone |  152 | yes                          |
| Harry Potter and the Chamber of Secrets |  162 | no                           |
| The Green Mile                          |  188 | no                           |
| Forrest Gump                            |  142 | yes                          |
+-----------------------------------------+------+------------------------------+
4 rows in set (0.00 sec)  /ПРИМЕР ИСПОЛЬЗОВАНИЯ IF

 SELECT title, time, if (time < 160, 'yes', 'no') AS 'RESULT' FROM movies LEFT JOIN directors ON id_director = directors.id;
+-----------------------------------------+------+--------+
| title                                   | time | RESULT |
+-----------------------------------------+------+--------+
| Harry Potter and the Philosophers Stone |  152 | yes    |
| Harry Potter and the Chamber of Secrets |  162 | no     |
| The Green Mile                          |  188 | no     |
| Forrest Gump                            |  142 | yes    |
+-----------------------------------------+------+--------+
4 rows in set (0.00 sec) /ПРИМЕР ИСПОЛЬЗОВАНИЯ IF С ПЕРЕИМЕНОВАНИЕ РЕЗУЛЬТИРУЮЩЕГО СТОЛБЦА В 'RESULT'
mysql> SELECT * FROM products ORDER BY Price;
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  5 | P20Pro      | Huawei       |            5 | 39000 |
|  4 | GalaxvS8    | Samsung      |            1 | 44000 |
|  2 | iPhone8     | Apple        |            2 | 54000 |
|  3 | Galaxv S9   | Samsung      |            2 | 59000 |
|  6 | iPhone X    | Apple        |            3 | 76000 |
+----+-------------+--------------+--------------+-------+
5 rows in set (0.00 sec) / ПРИМЕР СОРТИРОВКИ С ПОМОЩЬЮ ОПЕРАТОРА ORDER BY


 SELECT ProductName, ProductCount * Price AS SUM FROM puoducts ORDER BY SUM;
ERROR 1146 (42S02): Table 'proba.puoducts' doesn't exist
mysql> SELECT ProductName, ProductCount * Price AS SUM FROM products ORDER BY SUM;
+-------------+--------+
| ProductName | SUM    |
+-------------+--------+
| GalaxvS8    |  44000 |
| iPhone8     | 108000 |
| Galaxv S9   | 118000 |
| P20Pro      | 195000 |
| iPhone X    | 228000 |
+-------------+--------+
5 rows in set (0.00 sec) / ПРИМЕР СОРТИРОВКИ С ПРЕДВАРИТЕЛЬНЫМ ДЕЙСТВИЕМ УМНОЖЕНИЯ ПРИ ИСПОЛЬЗОВАНИИ ПСЕВДОНИМОВ

mysql> SELECT * FROM products LIMIT 2;
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  2 | iPhone8     | Apple        |            2 | 54000 |
|  3 | Galaxv S9   | Samsung      |            2 | 59000 |
+----+-------------+--------------+--------------+-------+
2 rows in set (0.00 sec) /пример использования LIMIT 2 для вывода только первых 2 строк таблицы products

mysql> SELECT * FROM products ORDER BY Price LIMIT 2;
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  5 | P20Pro      | Huawei       |            5 | 39000 |
|  4 | GalaxvS8    | Samsung      |            1 | 44000 |
+----+-------------+--------------+--------------+-------+
2 rows in set (0.00 sec) /пример использования ORDER BY ДЛЯ СОРТИРОВКИ ПО УБЫВАНИЮ И ОДНОВРЕМЕННО LIMIT 2 для вывода только первых 2 строк таблицы products

mysql> SELECT * FROM products ORDER BY Price LIMIT 2, 2;
+----+-------------+--------------+--------------+-------+
| Id | ProductName | Manufacturer | ProductCount | Price |
+----+-------------+--------------+--------------+-------+
|  2 | iPhone8     | Apple        |            2 | 54000 |
|  3 | Galaxv S9   | Samsung      |            2 | 59000 |
+----+-------------+--------------+--------------+-------+
2 rows in set (0.00 sec) /пример использования ORDER BY ДЛЯ СОРТИРОВКИ ПО УБЫВАНИЮ И ОДНОВРЕМЕННО LIMIT 2, 2 для вывода только двух строк начиная со второй строки таблицы products

UPDATE products SET Price = CASE ProductName WHEN 'iPhone 7' THEN 32000 WHEN 'iPhone8' THEN 51000 WHEN "Galaxv S9" THEN 56000 WHEN 'GalaxvS8' THEN 46000 END WHERE ProductName IN ('iPhone 7','iPhone8',"Galaxv S9",'GalaxvS8'); /ЗАПРОС НА ИЗМЕНЕНИЕ ДАННЫХ В ЗАВИСИМОСТИ ОТ ЗНАЧЕНИЯ НАИМЕНОВАНИЯ ТОВАРА

SELECT Manufacturer, COUNT(*) AS CountModels FROM Products GROUP BY Manufacturer;
+--------------+-------------+
| Manufacturer | CountModels |
+--------------+-------------+
| Apple        |           3 |
| Samsung      |           2 |
| Huawei       |           2 |
| HMD Global   |           1 |
+--------------+-------------+
4 rows in set (0.00 sec)        /использования функции COUNT для подсчета количества товара каждой модели и использование оператора GROUP BY для групировки по полю Manufacturer, с выводом результата в созднном поле CountModel


 SELECT AVG(Price) AS Average_Price FROM Products;
+---------------+
| Average_Price |
+---------------+
|    45750.0000 |
+---------------+
1 row in set (0.00 sec) /использование агрегатной функции AVG ДЛЯ ВЫВОДА СРЕДНЕГО ЗНАЧЕНИЯ СТОЛБЦА Price в созданном дополнительном столбце Average_Price

SELECT AVG(Price) AS Average_Price FROM Products WHERE Manufacturer = 'Apple' ;
+---------------+
| Average_Price |
+---------------+
|    53000.0000 |
+---------------+
1 row in set (0.00 sec) /пример использования предыдущих операторов с дополнением фильтрации (WHERE Manufacturer = 'Apple') и получение таким образом среднего значения для определенной модели (в данном случа 'Apple')


SELECT COUNT(*) FROM products;
+----------+
| COUNT(*) |
+----------+
|        8 |
+----------+
1 row in set (0.01 sec) /использование агрегатной функции COUNT(*) для подсчета строк в таблице.

SELECT Manufacturer, COUNT(*) AS ModelsCount FROM Products GROUP BY Manufacturer HAVING COUNT(*) > 1;
+--------------+-------------+ 
| Manufacturer | ModelsCount |
+--------------+-------------+
| Apple        |           3 |
| Samsung      |           2 |
| Huawei       |           2 |
+--------------+-------------+
3 rows in set (0.00 sec) / ЗАПРОС ВЫВОДИТ ТОВАРЫ ВСЕХ ПРОИЗВОДИТЕЛЕЙ ДЛЯ КОТОРЫХ ОПРЕДЕЛЕНО БОЛЕЕ ОДНОЙ МОДЕЛИ ДЛЯ ЭТОГО В ЗАПРОСЕ 1. ОБРАЩАЕМСЯ К ТАБЛИЦЕ - FROM Products 2. выбираем поле SELECT Manufacturer 3. ПОДСЧИТЫВАЕМ КОЛЛИЧЕСТВО МОДЕЛЕЙ COUNT(*) 4. СОЗДАЕМ ДОПОЛИТЕЛЬНЫЙ СТОЛБЕЦ AS ModelsCount 5. ГРУПИРУЕМ ПО ПОЛЮ Manufacturer 6. ЗАДАЕМ УСЛОВИЕ ФИЛЬТРАЦИИ HAVING COUNT(*) > 1 (КОЛИЧЕСТВО СТРОК УДОВЛЕТВОРЯЮЩИХ УСЛОВИЯМ ФИЛЬТРАЦИИ БОЛЬШЕ ОДНОЙ СТРОКИ)

SELECT Manufacturer, COUNT(*) AS ModelsCount FROM Products WHERE Price * ProductCount > 80000 GROUP BY Manufacturer HAVING COUNT(*) > 1;
+--------------+-------------+
| Manufacturer | ModelsCount |
+--------------+-------------+
| Apple        |           3 |
| Huawei       |           2 |
+--------------+-------------+
2 rows in set (0.00 sec)  /В данном случае сначала фильтруются строки: выбираются те товары, общая	стоимость которых больше 80000. Затем выбранные товары группируются	по производителям. И далее фильтруются сами группы -выбираются те	группы, которые
содержат больше 1 моделию

 SELECT Manufacturer, COUNT(*) AS Models, SUM(ProductCount) AS Units FROM Products WHERE Price * ProductCount > 80000 GROUP BY Manufacturer HAVING SUM(ProductCount) > 2 ORDER BY Units DESC;
+--------------+--------+-------+
| Manufacturer | Models | Units |
+--------------+--------+-------+
| Apple        |      3 |    10 |
| Huawei       |      2 |    10 |
| HMD Global   |      1 |     6 |
+--------------+--------+-------+
3 rows in set (0.00 sec) /Обращаемся к таблице Products задаем условие в котором просит отоблазить товар с ценой 80000 и выше. Групируем по колличеству. Нас интересует поле ProductCount и оно должно быть больше двух. Сортировка Order by происходит по убыванию (сверху наибольшее, снизу наименьшее). Поле Units отвечает за колличество телефонов. Происходим суммирование по полю ProductCount для конкретного производителяб Общее колличество Айфонов завезенных на склад равно 10 и имеется 3 модели, т.е. нам удовлетворяют 3 строчки.  Имеется одна Нокиа. Т.е. модель одна а колличество телефонов 6. Тоже самое происходит с Хуавэем. Имеется одна модель, а  количества моделей равно 5. Таким образом мы отсортировали все имеющиеся группы по убыванию (от большего к меньшему).

UPDATE products SET ProductName = CONCAT("i ", ProductName) WHERE Produ
ctName LIKE '%Phone%';
Query OK, 2 rows affected (0.01 sec)
Rows matched: 2  Changed: 2  Warnings: 0 /ПРИМЕР ИСПОЛЬЗОВАНИЕ ОПЕРАТОРА LIKE '%Phone%' в условии WHERE для поиска в строке сочетания символов (в данном случае сочетания: Phone) и использования функции CONCAT ДЛЯ ДОБАВЛЕНИЯ СТРОЧНЫХ СИМВОЛОВ: "i " к значению поля ProductName соответственно имеющего тип VARCHAR.

SELECT AVG(Price) AS Average_Price FROM Products;
+---------------+
| Average_Price |
+---------------+
|    45750.0000 |
+---------------+
1 row in set (0.00 sec) /ИСПОЛЬЗОВАНИЕ АГРЕГАТНОЙ ФУНКЦИИ AVG. ПОЛУЧАЕМ СРЕДНЕЕ ЗНАЧЕНИЕ СТОЛБЦА

SELECT AVG(Price) FROM products WHERE Manufacturer = 'Apple';
+------------+
| AVG(Price) |
+------------+
| 53000.0000 |
+------------+
1 row in set (0.00 sec) /ИСПОЛЬЗОВАНИЕ AVG C ФИЛЬТРОМ WHERE

mysql> SELECT COUNT(*) FROM products;
+----------+
| COUNT(*) |
+----------+
|        8 |
+----------+
1 row in set (0.01 sec) /ИСПОЛЬЗОВАНИЕ АГРЕГАТНОЙ ФУНКЦИИ COUNT ДЛЯ ПОДСЧЕТА КОЛЛИЧЕСТВА СТРОК.

SELECT MIN(Price), MAX(Price) FROM products;
+------------+------------+
| MIN(Price) | MAX(Price) |
+------------+------------+
|      28000 |      76000 |
+------------+------------+
1 row in set (0.00 sec) / ПРИМЕР ИСПОЛЬЗОВАНИЯ АГРЕГАТНЫХ ФУНКЦИЙ MIN, MAX;


SELECT Manufacturer, COUNT(*) AS ModelsCount FROM Products GROUP BY Manufacturer;
+--------------+-------------+
| Manufacturer | ModelsCount |
+--------------+-------------+
| Apple        |           3 |
| Samsung      |           2 |
| Huawei       |           2 |
| HMD Global   |           1 |
+--------------+-------------+
4 rows in set (0.00 sec) /пример использования групировки (GROUP BY)
SELECT Manufacturer, COUNT(*) AS Models, SUM(ProductCount) AS Units FROM Products WHERE Price * ProductCount > 80000 GROUP BY Manufacturer HAVING SUM(ProductCount) > 2 ORDER BY Units DESC;
+--------------+--------+-------+
| Manufacturer | Models | Units |
+--------------+--------+-------+
| Apple        |      3 |    10 |
| Huawei       |      2 |    10 |
| HMD Global   |      1 |     6 |
+--------------+--------+-------+
3 rows in set (0.00 sec) /использование HAVING

CREATE TABLE orders (id INT NOT NULL AUTO_INCREMENT, PRIMARY KEY(ID), product_name VARCHAR(99) NOT NULL, price INT, total_price INT, count INT); /СОЗДАЛИ ТАБЛИЦУ orders

CREATE TABLE sales (id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, art VARCHAR(10), name VARCHAR(20), count INT DEFAULT 0,  price DECIMAL(8.2) DEFAULT 0); /СОЗДАЛИ ТАБЛИЦУ sales

ALTER TABLE sales ADD CONSTRAINT ord_sales FOREIGN KEY (`id_order`) REFERENCES orders(`id`); /создали связь между таблицами



SET FOREIGN_KEY_CHECKS=0; /Отключает ограничение в БД по внешнему ключу.

SET FOREIGN_KEY_CHECKS=1; / Возвращает ограничение в БД по внешнему ключу.

SET FOREIGN_KEY_CHECKS=0; DROP TABLE orders;
Query OK, 0 rows affected (0.00 sec) /отключили ограничения в БД и удалили связанную таблицу, после чего при необходимости можно подключить связи в БД обратно вот так: SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE orders (id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, customer VARCHAR(50) NOT NULL, phone VARCHAR (15), mail VARCHAR(15), isinstock INT DEFAULT 0, accepted BOOL DEFAULT FALSE);
Query OK, 0 rows affected (0.03 sec) / создали новую таблицу orders


 CREATE TABLE ssssss (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, art VARCHAR(10) NOT NULL, name VARCHAR(150), count INT, price INT, id_order INT);
Query OK, 0 rows affected (0.03 sec) /СОЗДАНИЕ ТАБЛИЦЫ ssssss


SELECT * FROM orders INNER JOIN ssssss ON orders.id = ssssss.id_order;
+----+--------------+--------------+---------------+-----------+----------+----------+----------+-------------+-------------+-------+----+---------+-------------------------------------------------------------------------------------+-------+-------+----------+
| id | customer     | phone        | mail          | isinstock | accepted | contract | paid_for | transmitted | implemented | price | id | art     | name                                                                                | count | price | id_order |
+----+--------------+--------------+---------------+-----------+----------+----------+----------+-------------+-------------+-------+----+---------+-------------------------------------------------------------------------------------+-------+-------+----------+
|  1 | OOO Copez    | +79113176711 | copez@mail.ru |        51 |        1 |        0 |  1048.05 |           0 |           0 | 20.55 |  1 | 7642754 | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет розовый, размер 15 дюйм 7642754     |     1 | 19107 |        1 |
|  2 | IP Conev     | +79213176711 | conev@mail.ru |        22 |        1 |        0 |   513.70 |           0 |           0 | 23.35 |  2 | 7642755 | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет розовый, размер 17 дюйм 7642755     |     1 | 19107 |        2 |
|  3 | IP Petryshin | +79223176722 | pety@mail.ru  |        17 |        1 |        1 |  1139.00 |           1 |           1 | 67.00 |  3 | 7642756 | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет фисташковый, размер 15 дюйм 7642756 |     1 | 19107 |        3 |
|  4 | IP Conev     | +79213176711 | conev@mail.ru |        22 |        1 |        0 |   513.70 |           0 |           0 | 23.35 |  4 | 7642757 | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет фисташковый, размер 17 дюйм 7642757 |     1 | 19107 |        4 |
+----+--------------+--------------+---------------+-----------+----------+----------+----------+-------------+-------------+-------+----+---------+-------------------------------------------------------------------------------------+-------+-------+----------+
4 rows in set (0.00 sec) / INNER JOIN ТАБЛИЦ orders И sales (по полям orders.id и sales.id_order)


SELECT name, count < 100 AS MINI, count >= 100 or count <= 300 AS CENTER, count > 300 AS MAXI FROM ssssss JOIN orders ON ssssss.id_order = orders.id; /NEW


CREATE TABLE sales LIKE ssssss;
Query OK, 0 rows affected (0.03 sec) /создание пустой таблицы sales как клон таблицы ssssss

INSERT INTO sales SELECT * FROM ssssss;
Query OK, 174 rows affected (0.01 sec)
Records: 174  Duplicates: 0  Warnings: 0 /копирование данных из таблицы ssssss в таблицу sales, в итоге 2-х предыдущих действий (создание пустой таблицы и ее заполнения) таким образом создается клон таблицы ssssss с именем sales


SELECT FirstName, LastName FROM customers UNION SELECT FirstName, LastName FROM Employees;
+-----------+----------+
| FirstName | LastName |
+-----------+----------+
| Tom       | Smith    |
| Sam       | Brown    |
| Mark      | Adams    |
| Paul      | Ins      |
| John      | Sminth   |
| Tim       | Cook     |
| Homer     | Simpson  |
| Nick      | Svensson |
+-----------+----------+ /СОЕДИНЕНИЕ ВЫБОРОК С РАЗНЫХ ТАБЛИЦ С ПОМОЩЬЮ UNION;


 SELECT FirstName, LastName FROM customers UNION ALL SELECT FirstName, LastName FROM Employees;
+-----------+----------+
| FirstName | LastName |
+-----------+----------+
| Tom       | Smith    |
| Sam       | Brown    |
| Mark      | Adams    |
| Paul      | Ins      |
| John      | Sminth   |
| Tim       | Cook     |
| Homer     | Simpson  |
| Tom       | Smith    |
| Mark      | Adams    |
| Nick      | Svensson |
+-----------+----------+
10 rows in set (0.00 sec)  /СОЕДИНЕНИЕ ВЫБОРОК С РАЗНЫХ ТАБЛИЦ С ПОМОЩЬЮ UNION ALL;

 SELECT customer, isinstock, CASE WHEN 101 > isinstock THEN '1 (менее 100)' WHEN 300 < isinstock THEN '3 (более 300)' WHEN 301 < isinstock OR isinstock > 101 THEN '2 (от 100 до 300)' END AS ANALISIS FROM orders ORDER BY ANALISIS, customer, isinstock;
+--------------+-----------+-------------------+
| customer     | isinstock | ANALISIS          |
+--------------+-----------+-------------------+
| IP Conev     |        22 | 1 (менее 100)     |
| IP Conev     |        22 | 1 (менее 100)     |
| IP Klim      |        30 | 1 (менее 100)     |
| IP Klon      |        32 | 1 (менее 100)     |
| IP Petryshin |        17 | 1 (менее 100)     |
| OAO Kvir     |        50 | 1 (менее 100)     |
| OAO Mir      |        50 | 1 (менее 100)     |
| OAO Pituny   |        50 | 1 (менее 100)     |
| OAO Rr       |       100 | 1 (менее 100)     |
| OAO Shar     |       100 | 1 (менее 100)     |
| OOO Copez    |        51 | 1 (менее 100)     |
| OOO Kisa     |        40 | 1 (менее 100)     |
| IP Morkovkin |       170 | 2 (от 100 до 300) |
| IP Shygyev   |       150 | 2 (от 100 до 300) |
| OAO Rsss     |       300 | 2 (от 100 до 300) |
| OOO Moksura  |       200 | 2 (от 100 до 300) |
| OOO Mura     |       296 | 2 (от 100 до 300) |
| OOO Mura     |      2969 | 3 (более 300)     |
+--------------+-----------+-------------------+
18 rows in set (0.00 sec) /Task2

SELECT isinstock, customer, sales.name, sales.price, CASE WHEN 101 > isinstock THEN '1 (менее 100):' WHEN 300 < isinstock THEN '3 (более 300):' WHEN 301 < isinstock OR isinstock > 101 THEN '2 (от 100 до 300):' END AS ANALISIS FROM orders JOIN sales ON orders.id = sales.id_order ORDER BY ANALISIS, customer, isinstock;
+-----------+--------------+-------------------------------------------------------------------------------------------+-------+--------------------+
| isinstock | customer     | name                                                                                      | price | ANALISIS           |
+-----------+--------------+-------------------------------------------------------------------------------------------+-------+--------------------+
|        22 | IP Conev     | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет розовый, размер 17 дюйм 7642755           | 19107 | 1 (менее 100):     |
|        22 | IP Conev     | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет фисташковый, размер 17 дюйм 7642757       | 19107 | 1 (менее 100):     |
|        30 | IP Klim      | Велосипед 20 дюйм Progress Sierra FS RUS, цвет синий, размер 13 дюйм 7642713              | 15245 | 1 (менее 100):     |
|        32 | IP Klon      | Велосипед 20 дюйм Progress Sierra FS RUS, цвет хаки, размер 13 дюйм 7642714               | 15245 | 1 (менее 100):     |
|        17 | IP Petryshin | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет фисташковый, размер 15 дюйм 7642756       | 19107 | 1 (менее 100):     |
|        50 | OAO Kvir     | Велосипед 28 дюйм Forward Talica 3.0, 2022, цвет черный-бронзовый, размер 19 дюйм 7998044 | 19750 | 1 (менее 100):     |
|        50 | OAO Mir      | Велосипед 20 дюйм Progress Sierra FS RUS, цвет серый, размер 13 дюйм 7642712              | 15245 | 1 (менее 100):     |
|        50 | OAO Pituny   | Велосипед 20 дюйм Progress Indy MD RUS, цвет синий неон, размер 10.5 дюйм 7642721         | 19300 | 1 (менее 100):     |
|       100 | OAO Rr       | Велосипед 24 дюйм Progress Ingrid Low RUS, цвет розовый, размер 13 дюйм 7642731           | 16939 | 1 (менее 100):     |
|       100 | OAO Shar     | Велосипед 20 дюйм Progress Ingrid Low RUS, цвет белый, размер 10.5 дюйм 7642728           | 17157 | 1 (менее 100):     |
|        51 | OOO Copez    | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет розовый, размер 15 дюйм 7642754           | 19107 | 1 (менее 100):     |
|        40 | OOO Kisa     | Велосипед 26 дюйм Progress Lira RUS, цвет мятный, размер 15 дюйм 7642783                  | 20790 | 1 (менее 100):     |
|       170 | IP Morkovkin | Велосипед 26 дюйм Progress Ingrid Pro RUS, цвет кораловый, размер 17 дюйм 7642780         | 20124 | 2 (от 100 до 300): |
|       150 | IP Shygyev   | Велосипед 26 дюйм Progress Ingrid Pro RUS, цвет кораловый, размер 15 дюйм 7642779         | 20124 | 2 (от 100 до 300): |
|       300 | OAO Rsss     | Велосипед 24 дюйм Progress Ingrid Low RUS, цвет синий, размер 13 дюйм 7642732             | 16939 | 2 (от 100 до 300): |
|       200 | OOO Moksura  | Велосипед 26 дюйм Progress Lira MD RUS, цвет персиковый, размер 15 дюйм 7642781           | 22156 | 2 (от 100 до 300): |
|       296 | OOO Mura     | Велосипед 26 дюйм Progress Lira RUS, цвет мятный, размер 17 дюйм 7642784                  | 20790 | 2 (от 100 до 300): |
|      2969 | OOO Mura     | Велосипед 26 дюйм Progress Lira MD RUS, цвет персиковый, размер 17 дюйм 7642782           | 22156 | 3 (более 300):     |
+-----------+--------------+-------------------------------------------------------------------------------------------+-------+--------------------+
18 rows in set (0.00 sec) /task 2 (с использованиеm JOIN)

SELECT customer, sales.name, accepted, contract, transmitted, implemented FROM orders JOIN sales ON orders.id = sales.id_order WHERE accepted = 1 AND contract = 1 AND transmitted = 1 AND implemented = 1;
+--------------+-------------------------------------------------------------------------------------------+----------+----------+-------------+-------------+
| customer     | name                                                                                      | accepted | contract | transmitted | implemented |
+--------------+-------------------------------------------------------------------------------------------+----------+----------+-------------+-------------+
| IP Petryshin | Велосипед 26 дюйм Progress Ingrid Low RUS, цвет фисташковый, размер 15 дюйм 7642756       |        1 |        1 |           1 |           1 |
| IP Shygyev   | Велосипед 26 дюйм Progress Ingrid Pro RUS, цвет кораловый, размер 15 дюйм 7642779         |        1 |        1 |           1 |           1 |
| IP Morkovkin | Велосипед 26 дюйм Progress Ingrid Pro RUS, цвет кораловый, размер 17 дюйм 7642780         |        1 |        1 |           1 |           1 |
| OOO Moksura  | Велосипед 26 дюйм Progress Lira MD RUS, цвет персиковый, размер 15 дюйм 7642781           |        1 |        1 |           1 |           1 |
| OOO Mura     | Велосипед 26 дюйм Progress Lira MD RUS, цвет персиковый, размер 17 дюйм 7642782           |        1 |        1 |           1 |           1 |
| OOO Kisa     | Велосипед 26 дюйм Progress Lira RUS, цвет мятный, размер 15 дюйм 7642783                  |        1 |        1 |           1 |           1 |
| OOO Mura     | Велосипед 26 дюйм Progress Lira RUS, цвет мятный, размер 17 дюйм 7642784                  |        1 |        1 |           1 |           1 |
| OAO Kvir     | Велосипед 28 дюйм Forward Talica 3.0, 2022, цвет черный-бронзовый, размер 19 дюйм 7998044 |        1 |        1 |           1 |           1 |
| OAO Mir      | Велосипед 20 дюйм Progress Sierra FS RUS, цвет серый, размер 13 дюйм 7642712              |        1 |        1 |           1 |           1 |
+--------------+-------------------------------------------------------------------------------------------+----------+----------+-------------+-------------+
9 rows in set (0.00 sec) /TASK2 ( ВЫВОДИМ В ЗАПРОСЕ ПОЛНЫЙ СТАТУС ЗАКАЗА)

mysql> SELECT TRIM('H' FROM 'HMD Global');
+-----------------------------+
| TRIM('H' FROM 'HMD Global') |
+-----------------------------+
| MD Global                   |
+-----------------------------+
1 row in set (0.00 sec) /удаление символов

 LOAD DATA LOCAL INFILE 'C:/Users/Public/PC-NVR/EDUCATION/Named/MYSQL/fuel/testMYSQL_L4.txt' INTO TABLE test COLUMNS TERMINATED BY ",";
Query OK, 26 rows affected, 51 warnings (0.01 sec)
Records: 26  Deleted: 0  Skipped: 0  Warnings: 51 \вставка данный из  стового файла в таблицу test;


 ALTER TABLE test ADD COLUMN id INT PRIMARY KEY AUTO_INCREMENT;
Query OK, 0 rows affected (0.06 sec) /добавили в таблицу test новый столбец id;

ALTER TABLE test ADD COLUMN one VARCHAR(5),ADD COLUMN two VARCHAR(5),ADD COLUMN three VARCHAR(5);
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0 /добавили несколько столбцов одновременно


ПРИМЕР ФАЙЛА ДЛЯ СКАЧИВАНИЯ В ТАБЛИЦУ СТОЛБЦЫ РАЗДЕЛЕТЫ ОДНИМ ТАБ (табуляцией), а строки переноса невидимыми символами переноса на следующу строку (для документов Виндовс это: '\r\n', для других ОС иначе)

179	193	ОПЕРАТОР	testMYSQL_	0	0
168	18	ОПЕРАТОР UNION	testMYSQL_	0	1
157	171	ОПЕРАТОР UNION И	testMYSQL_	1	0
14	160	ОПЕРАТОР UNION И ЕГО	testMYSQL_	1	1
136	159	ОПЕРАТОР UNION И ЕГО СИНТАКСИС	testMYSQL_	0	1
125	14	ОПЕРАТОР	testMYSQL_	1	0
114	133	ОПЕРАТОР UNION	testMYSQL_	1	1


mysql> LOAD DATA LOCAL INFILE 'C:/Users/Public/PC-NVR/EDUCATION/Named/MYSQL/fuel/testMYSQL2_L4.txt' INTO TABLE test FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\r\n' (@col1,@col2,@col3,@col4,@col5,@col6) set start=@col1, end=@col2, name=@col3, name_id=@col4, one=@col5,two=@col6;
Query OK, 7 rows affected (0.00 sec)
Records: 7  Deleted: 0  Skipped: 0  Warnings: 0 \ скачиваем в таблицу test данные из документа 'C:/Users/Public/PC-NVR/EDUCATION/Named/MYSQL/fuel/testMYSQL2_L4.txt'. Столбцы документа по порядку вносятся в выбранные столбцы таблицы БД (разделитель столбцов знак табуляции: 1 таб, разделитель строк не видимый символ переноса строки для документов созданных в Windows это обозначение '\r\n') 

mysql> SELECT * FROM test;
+-------+------+--------------------------------+------------+-----+------+------+-------+
| start | end  | name                           | name_id    | id  | one  | two  | three |
+-------+------+--------------------------------+------------+-----+------+------+-------+
| 179   | 193  | ОПЕРАТОР                       | testMYSQL_ | 110 | 0    | 0    | NULL  |
| 168   | 18   | ОПЕРАТОР UNION                 | testMYSQL_ | 111 | 0    | 1    | NULL  |
| 157   | 171  | ОПЕРАТОР UNION И               | testMYSQL_ | 112 | 1    | 0    | NULL  |
| 14    | 160  | ОПЕРАТОР UNION И ЕГО           | testMYSQL_ | 113 | 1    | 1    | NULL  |
| 136   | 159  | ОПЕРАТОР UNION И ЕГО СИНТАКСИС | testMYSQL_ | 114 | 0    | 1    | NULL  |
| 125   | 14   | ОПЕРАТОР                       | testMYSQL_ | 115 | 1    | 0    | NULL  |
| 114   | 133  | ОПЕРАТОР UNION                 | testMYSQL_ | 116 | 1    | 1    | NULL  |
+-------+------+--------------------------------+------------+-----+------+------+-------+
7 rows in set (0.00 sec)



LOAD DATA LOCAL INFILE 'C:/Users/Public/PC-NVR/EDUCATION/Named/MYSQL/fuel/testMYSQL0_L4.txt' INTO TABLE  test FIELDS TERMINATED BY ',' LINES TERMINATED BY '\r\n' (@col1, @col2, @col3, @col4) set start = @col1, end = @col2, name = @col3, name_id = @col4;

Query OK, 26 rows affected, 26 warnings (0.00 sec)
Records: 26  Deleted: 0  Skipped: 0  Warnings: 26  /Столбцы документа по порядку вносятся в выбранные столбцы таблицы БД (разделитель столбцов запятая: ',', разделитель строк не видимый символ переноса строки для документов созданных в Windows это обозначение: '\r\n') 


mysql> LOAD DATA LOCAL INFILE 'C:/Users/Vladi/EDUCATION/web/Named/MYSQL/fuel1/fuelMYSQL_L2(d).txt' INTO TABLE test FIELDS TERMINATED BY ',' LINES TERMINATED BY 'MYSQL_L2,' (@col1, @col2, @col3, @col4, @col5, @col6) set start = @col1, finish = @col2, name = @col3, one = @col4, two = @col5, three = @col6;
Query OK, 48 rows affected (0.01 sec)
Records: 48  Deleted: 0  Skipped: 0  Warnings: 0


mysql> LOAD DATA LOCAL INFILE "C:/Users/Vladi/EDUCATION/Named/Vimdiff/titles/fuel/fuelVim43text(25).txt" INTO TABLE items COLUMNS TERMINATED BY ";" LINES TERMINATED BY ",Vim43text," (@col1, @col2, @col3, @col4, @col5, @col6, @col7) SET start = @col1, end = @col2, name = @col3, settings = @col4, interview = @col5, snippets = @col6, basics = @col7;
Query OK, 19 rows affected (0.01 sec)
Records: 19  Deleted: 0  Skipped: 0  Warnings: 0



 ALTER TABLE subject ALTER platform DROP DEFAULT;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0 /отменить атрибут DEFAULT (НЕ ИЗМЕНИТЬ ЗАНЧЕНИЕ, А ОТМЕНИТЬ НАЛИЧИЕ САМОГО АТРИБУТА)


UPDATE subject SET name_v = 'Vim43text';
Query OK, 2 rows affected (0.01 sec)
Rows matched: 2  Changed: 2  Warnings: 0 // изменить имеющиеся значения столбца во все записях (строках)

UPDATE subject SET name_v = 'MYSQL_L1' WHERE id = 3; // изменили имеющиеся значение столбца в записи (строке) в которой поле id = 3;

DELETE FROM teacherp; // удалить все записи из таблицы teacher;


SET FOREIGN_KEY_CHECKS=0; ALTER TABLE teacherp MODIFY id INT NOT NULL AUTO_INCREMENT; SET FOREIGN_KEY_CHECKS=1; // ДОБАВИТЬ СВОЙСТВО ИНКРЕМЕНТА В ПОЛЕ ТАБЛИЦЫ ИМЕЮЩЕЙ СВЯЗЬ, КОТОРАЯ НЕ ДАЕТ ЭТО СДЕЛАТЬ БЕЗ ЕЕ ОТКЛЮЧЕНИЯ (НАПРИМЕР ТАК: SET FOREIGN_KEY_CHECKS=0;)

LOAD DATA LOCAL INFILE "C:/Users/Vladi/EDUCATION/Named/MYSQL/Lessons/5/fuel/fuelMYSQL_L5(4).txt" INTO TABLE ITEMS COLUMNS TERMINATED BY "~"  LINES TERMINATED BY ",MYSQL_L5,"(@col1, @col2,@col3,@col4,@col5,@col6,@col7) SET start = @col1, end = @col2, name = @col3, settings = @col4, interview = @col5, snippets = @col6, basics = @col7;

mysql> LOAD DATA LOCAL INFILE "C:/Users/Vladi/EDUCATION/Named/VideoHandler/CATAPULT_ed_mysql/fuelMYSQL_L1 (26-05-25).txt" INTO TABLE TEMP COLUMNS TERMINATED BY "~"  LINES TERMINATED BY ",MYSQL_L1,"(@col1, @col2,@col3,@col4,@col5,@col6,@col7,@col8,@col9) SET start = @col1, end = @col2, name = @col3, settings = @col4, interview = @col5, snippets = @col6, basics = @col7, record = @col8, theory = @col9; --  из файла источника заполнитил таблицу TEMP (ИЗМЕНИЛИ СИНТАКСИС С УЧЕТОМ НОВЫХ ДАННЫХ ОТ 31-05-25)
Query OK, 47 rows affected, 7 warnings (0.01 sec)
Records: 47  Deleted: 0  Skipped: 0  Warnings: 7

 CREATE TABLE TEMP SELECT ID, START, END, NAME, SETTINGS, INTERVIEW, SNIPPETS, BASICS FROM ITEMS WHERE ID = NULL; -- СОЗДАЛИ ТАБЛИЦУ TEMP ПУТЕМ КОПИРОВАНИЯ С ИМЕЮЩЕЙСЯ ТАБЛИЦЫ ITEMS
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0 

 CREATE TABLE TEMP SELECT ID, START, END, NAME, SETTINGS, INTERVIEW, SNIPPETS, BASICS, RECORD, THEORY FROM ITEMS WHERE ID = NULL; -- СОЗДАЛИ ТАБЛИЦУ TEMP ПУТЕМ КОПИРОВАНИЯ С ИМЕЮЩЕЙСЯ ТАБЛИЦЫ ITEMS (К ПРЕДЫДУЩЕМУ ДОБАВИЛИ НОВЫЕ СТОЛБЦЫ ДОБАВЛЕННЫЕ В ТАБЛИЦУ:  RECORD, THEORY)
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

ALTER TABLE TEMP MODIFY COLUMN ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT; -- ИЗМЕНИЛИ СВОЙСТВА ПОЛЯ НА КЛЮЧЕВОЕ PRIMARY KEY
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

INSERT INTO ITEMS (`EX_ID`, `START`, `END`, `NAME`, `SETTINGS`, `INTERVIEW`, `SNIPPETS`, `BASICS`) SELECT `ID`, `START`, `END`, `NAME`, `SETTINGS`, `INTERVIEW`, `SNIPPETS`, `BASICS` FROM TEMP; -- КОПИРОВАТЬ ЗАПИСИ ИЗ ТАБЛИЦЫ TEMP В ТАБЛИЦУ ITEMS ИМЕНА ПОЛЕЙ КОТОРЫХ ЧАСТИЧНО НЕ СОВПАДАЮТ(А ИМЕННО: EX_ID AND ID)
Query OK, 31 rows affected (0.01 sec)

mysql> INSERT INTO ITEMS (`EX_ID`, `START`, `END`, `NAME`, `SETTINGS`, `INTERVIEW`, `SNIPPETS`, `BASICS`, `RECORD`, `THEORY`) SELECT `ID`, `START`, `END`, `NAME`, `SETTINGS`, `INTERVIEW`, `SNIPPETS`, `BASICS`, `RECORD`, `THEORY` FROM TEMP; -- КОПИРОВАТЬ ЗАПИСИ ИЗ ТАБЛИЦЫ TEMP В ТАБЛИЦУ ITEMS ИМЕНА ПОЛЕЙ КОТОРЫХ ЧАСТИЧНО НЕ СОВПАДАЮТ(А ИМЕННО: EX_ID AND ID кроме того изменен синтаксис команды с учетом изменений в таблице ITEMS от 31-05-25)
Query OK, 47 rows affected (0.01 sec)
Records: 47  Duplicates: 0  Warnings: 0

SELECT subject.*, items.* FROM subject JOIN items ON items.subject_id = subject.id; -- inner join по полям: items.subject_id = subject.id