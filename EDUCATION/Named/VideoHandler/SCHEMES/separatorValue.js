// назначение модуля выбрать разделитель для использования его в коде для совместимости с разными версиями журналов т.к. они записывались с различными разделителями (например: "," или ";" и др.)
const valueSeparator = ()=> {
    let typeSeparator; // объявляет переменную для запоминания в дальнешем искомого разделителя
    let CurrentMenuItem = document.querySelector("#top").value.slice(2); // из основного меню выбирает текущее значение и удаляет лишнии символы слева, для использования далее как ключ для получения значений из localStorage (Chrome)
    try{ // код для перехвата ошибки связанной  с обращением к LocalStorage по отсутвующему в нем ключю
    let CurrentKey = localStorage.getItem("1" + CurrentMenuItem).trim(); // из локального хранилища localStorage (Chrome) по ключу (ключ создается сложением "1" + CurrentMenuItem) из предыдущей строки получает строку подменю (точнее второй стандантный пункт подменю, типа: 0, 0, All..), и удаляет лишние пробелы 
    typeSeparator = CurrentKey.slice(1).charAt(0); // удаляет лишний символ слева и присваивает переменной typeSeparator значение идущего за этим символом первого разделителя
    return typeSeparator // возвращает извлеченный разделитель для использования там где необходимо в коде всей программы (с целью обеспечить совместимость с  журналами созданными ранее с использование различными разделителей)
    } catch(error){ // обработка ошибки связанной  с обращением к LocalStorage по отсутвующему в нем ключю
    alert(`Остановка программы из-за попытки обращения к LocalStorage по отсутвующему в нем ключю - ${"1" + CurrentMenuItem} `); // предупреждение об остановке 
    window.stop; // прерывает загрузку с целью не допустить развития ошибочного сценария перехваченной ошибки
    }
};
