// reductionCalculator - функция уменьшает входное число в определенное нижеуказанным делителем раз. Полученное значение в программе используется затем для установления размера шага для перехода к месту воспроизведения
// magnificationСalculator - функция увеличивает входное число в определенное нижеуказанным множителем раз. Полученное значение в программе используется затем для установления размера шага для перехода к месту воспроизведения
// reset - функция сбрасывает значение переменной - theMainValueOfThePlayPosition, до значения по умолчанию установливаемому первоначально константе - theDefaultValueOfThePlayPosition
commentCreate.js - функция возвращающая текст комментария;
// setPause.js - функция в случае обращения к ней в момент когда видеозапись воспросизводится, приостанавливает воспроизведение видеозаписи до следующего включения воспроизведения видеозаписи;
// setItemFunction - функция принимает параметр ключа - key, и параметр данных - data, и записывает принимаемые параметры в localStorage браузера (в соотвествии с синтаксисом localStorage баузера)
// getItemFunction - функция, принимает параметр ключа - key, и по принятому параметру ключа - key, извлекает из хранилища баузера - localStorage ранее записанные данные и возвращает их в ответ на обращение к настоящей функции - getItemFunction (в соотвествии с синтаксисом localStorage баузера)
// removeItemFunction - функция удаляет значение  window.localStorage (хранилища браузера) по входящему значению ключу - key, в соответствии с синтаксисом - localStorage;
// changingThisLineFragment - функция, которая принимает в качестве параметров строку - 1) line(содержит строку активного пункта меню "topic"), 2) Разделитель в значение separator (содержит значение возвращаемое функцией valueSeparator(), т.е. значение текущего разделителя используемого во всей программе). 3) Номер по порядку фрагмента строки (фрагмента который требуется заменить). 4) Значение комментария которым в программе будет заменен старый комментарий. В первой строке тела функции, значение разделителя separator присваивается константе separatorCurrent. Во-второй,  строка пораметра line преобразуется в массив по разделителю - separator (константа separatorCurrent) и присваивается переменной - anArrayFromTheCurrentRow. Для работы с элементами созданного массива создается переменная pull. Создается переменная  fragmentNumberInОrderPlus которой присваивает значение параметра - fragmentNumberInОrder. Логический оператор if в случае если параметр fragmentNumberInОrder имеет отрицательное значение вызывает функцию convertMinus, которая возрвращает оператор преобразованный в положительное и соответствующее относительно порядку элементов созданного массива anArrayFromTheCurrentRow значение и присваивает его переменной fragmentNumberInОrderPlus. Цикл for повторяет содержащий код количество раз равное количеству элементов массива  anArrayFromTheCurrentRow.   Первый логический оператор if внутри цикла проверяет сравнялось ли значение счетчика leng c значением переменной fragmentNumberInОrderPlus и если да, то элементу element (производному от элемента массива имеющего тот же порядковый номер, что и строка line разделенная по разеделителю separator) присваивается строковое значение нового комментария. Перед присвоением комментария  функцией theKillerOfOuterQuotes, он очищается от кавычек. Во втором логическом операторе if внутри цикла проверяется является ли размер счетчика leng меньше длины массива минус 1 (меньше вот такого значения: anArrayFromTheCurrentRow.length - 1), если да то на этом витке цикла, значение element вместе с строковым значением разделителя separator (переменная separatorCurrent) складывается с значением переменной pull. Если нет то складывается с значением переменной pull без прибавления разделителя следом (как это было при условии счетчика меньше) после чего цикл заканчивается и значение pull содержащие строку с замещеным комментарием, функцией changingThisLineFragment возвращается, вызвавшему ее оператору.
//  convertMinus - функция преобразует отрицательно значение индекса при работе с массивом в положительное
// keyTop - функция возвращающая текущий (выбранный ранее ключ - которому ранее было присвоено, для метки выбранного ключа два значения ноль в виде: 00 слева от имени (в LocalStorage), которые програмным путем отображаются (преобразовано) для меню top: *0 - по факту 00 и *0, это одно и тоже) ключ главного меню - top (доп.информация keyTop без нулей или ноля (ноль - т.е. один ноль с права имени помечает все остальные не выбранные значения главного меню - Top)) используется как составная часть ключей меню topic (вместо нулей в меню topic ключам с права присваиваивают числа от 1 и далее по порядку по возрастанию).
// keyМaster функция возвращает строку убирая из нее нули, если они есть (В первой строки тела присваивает переменной значение текущего (выбранного ранее т.е. верхнего) пункта меня top. Во второй преобразует строку в массив и убирает одновременно из него все элементы со значением 0. В третьей строке объединяет оставшиеся элементы в строку). И т.д.
// valueMenyTopic - функция возращающая значение активного меню topic
// numMenuTopic функция которая принимает значение активного меню topic (получает его от функции valueMenyTopic();) с помощью рег выражения преаобразует эту строку в массив в начальном элементе которого сохраняет цифры после * из полученного от функции valueMenyTopic() значения (строки) и возвращает значение этого элемента, т.е. по факту цифры которые идут в строке topic после *.
// theDismembermentFunction - функция которая принимает в качестве аргуменов первое: строку(incomingBody), второе разделитель (separator). В перовой строке своего тела вошедшая строка(incomingBody) разбивает по метке разделителя (sepfrator). Во-второй строке полученный массив элеменов возвращается оператору вызвавшему эту функцию (theDismembermentFunction).
// replaceTheContent - функция заменяет текстовое содержание окна для редактирования коментариев (textarea id ="valueTextarea" name = "comment" расположенного в meny2 ) на текстовое содержание активного пункта меню (topic - которое выводится из кода функции - menu2) для его редактирования.
// saveButtonTextareaFunction  процедура без аргументов. В первой строке тела путем обращения к другим функциям формирует новую строку с учетом произведенных редакционных изменений (если они были) и присваивает ее константе addValue. Во второй строке обращаясь к функции numMenuTopic() получает от нее значение номера активного пункта меню topic и присваиваект его константе theKeyNumberInTheRequest. В третье строке обращаясь к функции keyMaster() получает от нее значение ключа (буквенной его части для решения вопроса обращения к localStorage в дальнейшем в соотвествии с установленым синтаксисом), которое присваивает константе theLettersOfTheKeyInTheRequest. В четвертой строке значения полученные в двух предыдущих строках складывает, таким образом, что получается ключ для обращения к localStorage, по которому можно переписать значение комментария активного пункта меню topic новым отредактированным значением (текстовым контентом). В пятой строке с помощью сознаданного ключа в установленном для localStorage синтаксисом переписывает в нем старое текстовое значение на новое.
 // saveMenuItemFunction  процедура без аргументов. В первой строке тела путем обращения к другим функциям формирует новую строку с учетом произведенных предварительно редакционных изменений (если они были) и полученное новое текстовое значение присваивает константе addValue. Во второй строке обращаясь к функции numMenuTopic() получает от нее значение номера активного пункта меню topic и присваиваект его константе theKeyNumberInTheRequest. В третье строке обращаясь к функции keyMaster() получает от нее значение ключа (буквенной его части для решения вопроса обращения к localStorage в дальнейшем в соотвествии с установленым синтаксисом), которое присваивает константе theLettersOfTheKeyInTheRequest. В четвертой строке значения полученные в двух предыдущих строках складывает, таким образом, что получается ключ для обращения к localStorage, по которому можно переписать значение текущего активного пункта меню topic новым отредактированным значением (новым текстовым контентом). В пятой строке с помощью сознаданного ключа и в установленном для localStorage синтаксисом переписывает в нем старое текстовое значение на новое.
 // createValueTextarea - функция которая первым аргументом value1 принимает полную строку формирования пункта активного меню topic которую делит по  раделителю полученному в аргумент value2 на элементы массива (преобразует в массив). Затем по третьему аргументу value3, из полученного массива вырезает элемент содержащий текстовые данные комментария автивного пункта меню topic и в этой же первой строке тела функции преобразует полученный элемента массива в строку с помощью оператора join(""). Затем в следующей строке с помощью внешней функции theKillerOfOuterQuotes удаляет из полученной строки наружные кавычки (т.к. они  автоматически (как будто) присваюваются окном  textarea, где редактируется комментарий и при дальнейших преобразованиях строки являются излишними и ухудшают работу кода). В заключительной строке возращается полученное значение комментария (return product).
 // takeABodyPart - функция принимает первым параметром (incomingDismemberment) массив элементов, вторым параметром принимает номер по порядку элемента значение которого необходимо выбрать (partNumber). В первой строке тела выбирает значение выбранного элемента. Во-второй возвращает полученное (в переменную theSelectedPiece) значение выбранного элемента оператору вызвавшему эту функцию (takeABodyPart).
 // theKillerOfOuterQuotes удаляет внешние кавычки строки

  // cMl - функция возвращает текущие миллисекунды

  // cSe - функция возвращает текущие секунды
  
  // cMi - функция возвращает текущие минуты

  // cHr - функция возвращает текущие часы

  // cD - функция возвращает текущий день

  // cM - функция возвращает текущие месяц

  // cY - функция возвращает текущий год

  // fCD  - функция (format Carrent Date) которая возвращает текущую дату. Принимает следующие аргументы. Первый: separator (разделитель). Второй: набор установленных буквосочетаний (cY - текущий год, cM - текущий месяц, cD - текущий день, которые вводятся во втором аргументе вызвова без какоего-либо разделителя). Возвращает формат даты  в виде строки, исходя из указанных во втором аргументе установленных буквосочетаний, их состава и порядка. Возращаемые значения даты разделяются между значением разделителя указанным в первом аргументе.

   // fCD  - функция (format Carrent Time) которая возвращает текущее время. Принимает следующие аргументы. Первый: separator (разделитель). Второй: набор установленных буквосочетаний (cHr - текущий час, cMi - текущая минута, которые вводятся во втором аргументе вызвова без какоего-либо разделителя). Возвращает формат времени  в виде строки, исходя из указанных во втором аргументе установленных буквосочетаний, их состава и порядка. Возращаемые значения даты разделяются между значением разделителя указанным в первом аргументе.

   // fSM  - функция (format Carrent Time) которая возвращает текущие секунды и миллисекунды. Принимает следующие аргументы. Первый: separator (разделитель). Второй: набор установленных буквосочетаний (cSe - текущая секунда, cMl - текущая милисекунда, которые вводятся во втором аргументе вызвова без какоего-либо разделителя). Возвращает формат времени (текущих секунд, миллисекунд)  в виде строки, исходя из указанных во втором аргументе установленных буквосочетаний, их состава и порядка. Возращаемые значения даты разделяются между значением разделителя указанным в первом аргументе.